<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.srm.source.cux.rfx.infra.mapper.RcwlRfxHeaderBaseMapper">
    <resultMap id="templateMap" type="org.srm.source.share.domain.entity.SourceTemplate">
        <result column="template_id" property="templateId" jdbcType="DECIMAL"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="template_num" property="templateNum" jdbcType="VARCHAR"/>
        <result column="template_name" property="templateName" jdbcType="VARCHAR"/>
        <result column="template_status" property="templateStatus" jdbcType="DECIMAL"/>

        <result column="version_number" property="versionNumber" jdbcType="DECIMAL"/>
        <result column="latest_flag" property="latestFlag" jdbcType="VARCHAR"/>
        <result column="source_category" property="sourceCategory" jdbcType="VARCHAR"/>
        <result column="source_announcement_flag" property="sourceAnnouncementFlag" jdbcType="DECIMAL"/>
        <result column="bid_announcement_flag" property="bidAnnouncementFlag" jdbcType="DECIMAL"/>

        <result column="pretrial_flag" property="pretrialFlag" jdbcType="DECIMAL"/>
        <result column="release_approve_type" property="releaseApproveType" jdbcType="VARCHAR"/>
        <result column="result_approve_type" property="resultApproveType" jdbcType="VARCHAR"/>
        <result column="bid_rule_type" property="bidRuleType" jdbcType="VARCHAR"/>
        <result column="qualification_type" property="qualificationType" jdbcType="VARCHAR"/>

        <result column="expert_score_type" property="expertScoreType" jdbcType="VARCHAR"/>
        <result column="open_bid_order" property="openBidOrder" jdbcType="VARCHAR"/>
        <result column="subject_matter_rule" property="subjectMatterRule" jdbcType="VARCHAR"/>
        <result column="direct_cross_round_flag" property="directCrossRoundFlag" jdbcType="DECIMAL"/>

        <result column="opener_flag" property="openerFlag" jdbcType="DECIMAL"/>
        <result column="valid_date_input_type" property="validDateInputType" jdbcType="VARCHAR"/>
        <result column="tax_change_flag" property="taxChangeFlag" jdbcType="DECIMAL"/>
        <result column="auto_defer_flag" property="autoDeferFlag" jdbcType="DECIMAL"/>

        <result column="source_method" property="sourceMethod" jdbcType="VARCHAR"/>
        <result column="price_category" property="priceCategory" jdbcType="VARCHAR"/>
        <result column="source_type" property="sourceType" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="org.srm.source.rfx.domain.entity.RfxHeader">
        <result column="rfx_header_id" property="rfxHeaderId" jdbcType="DECIMAL"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="rfx_num" property="rfxNum" jdbcType="VARCHAR"/>
        <result column="rfx_status" property="rfxStatus" jdbcType="VARCHAR"/>
        <result column="rfx_title" property="rfxTitle" jdbcType="VARCHAR"/>
        <result column="template_id" property="templateId" jdbcType="DECIMAL"/>
        <result column="source_category" property="sourceCategory" jdbcType="VARCHAR"/>
        <result column="source_method" property="sourceMethod" jdbcType="VARCHAR"/>
        <result column="pur_organization_id" property="purOrganizationId" jdbcType="DECIMAL"/>
        <result column="company_id" property="companyId" jdbcType="DECIMAL"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="auction_direction" property="auctionDirection" jdbcType="VARCHAR"/>
        <result column="budget_amount" property="budgetAmount" jdbcType="DECIMAL"/>
        <result column="tax_included_flag" property="taxIncludedFlag" jdbcType="DECIMAL"/>
        <result column="tax_id" property="taxId" jdbcType="DECIMAL"/>
        <result column="tax_rate" property="taxRate" jdbcType="DECIMAL"/>
        <result column="currency_code" property="currencyCode" jdbcType="VARCHAR"/>
        <result column="exchange_rate_id" property="exchangeRateId" jdbcType="DECIMAL"/>
        <result column="exchange_rate_type" property="exchangeRateType" jdbcType="VARCHAR"/>
        <result column="exchange_rate_date" property="exchangeRateDate" jdbcType="DATE"/>
        <result column="exchange_rate_period" property="exchangeRatePeriod" jdbcType="VARCHAR"/>
        <result column="exchange_rate" property="exchangeRate" jdbcType="DECIMAL"/>
        <result column="rfx_remark" property="rfxRemark" jdbcType="VARCHAR"/>
        <result column="quotation_start_date" property="quotationStartDate" jdbcType="DATE"/>
        <result column="quotation_end_date" property="quotationEndDate" jdbcType="DATE"/>
        <result column="sealed_quotation_flag" property="sealedQuotationFlag" jdbcType="DECIMAL"/>
        <result column="open_rule" property="openRule" jdbcType="VARCHAR"/>
        <result column="auction_ranking" property="auctionRanking" jdbcType="VARCHAR"/>
        <result column="source_type" property="sourceType" jdbcType="VARCHAR"/>
        <result column="price_category" property="priceCategory" jdbcType="VARCHAR"/>
        <result column="payment_type_id" property="paymentTypeId" jdbcType="DECIMAL"/>
        <result column="payment_term_id" property="paymentTermId" jdbcType="DECIMAL"/>
        <result column="round_number" property="roundNumber" jdbcType="DECIMAL"/>
        <result column="version_number" property="versionNumber" jdbcType="DECIMAL"/>
        <result column="quotation_order_type" property="quotationOrderType" jdbcType="VARCHAR"/>
        <result column="quotation_running_duration" property="quotationRunningDuration" jdbcType="DECIMAL"/>
        <result column="quotation_interval" property="quotationInterval" jdbcType="DECIMAL"/>
        <result column="auction_rule" property="auctionRule" jdbcType="VARCHAR"/>
        <result column="auto_defer_flag" property="autoDeferFlag" jdbcType="DECIMAL"/>
        <result column="auto_defer_duration" property="autoDeferDuration" jdbcType="DECIMAL"/>
        <result column="released_date" property="releasedDate" jdbcType="DATE"/>
        <result column="released_by" property="releasedBy" jdbcType="DECIMAL"/>
        <result column="terminated_date" property="terminatedDate" jdbcType="DATE"/>
        <result column="terminated_by" property="terminatedBy" jdbcType="DECIMAL"/>
        <result column="terminated_remark" property="terminatedRemark" jdbcType="VARCHAR"/>
        <result column="approved_date" property="approvedDate" jdbcType="DATE"/>
        <result column="approved_by" property="approvedBy" jdbcType="DECIMAL"/>
        <result column="approved_remark" property="approvedRemark" jdbcType="VARCHAR"/>
        <result column="time_adjusted_date" property="timeAdjustedDate" jdbcType="DATE"/>
        <result column="time_adjusted_by" property="timeAdjustedBy" jdbcType="DECIMAL"/>
        <result column="time_adjusted_remark" property="timeAdjustedRemark" jdbcType="VARCHAR"/>
        <result column="closed_flag" property="closedFlag" jdbcType="DECIMAL"/>
        <result column="source_from" property="sourceFrom" jdbcType="VARCHAR"/>
        <result column="pretrail_remark" property="pretrailRemark" jdbcType="VARCHAR"/>
        <result column="quotation_type" property="quotationType" jdbcType="VARCHAR"/>
        <result column="total_cost" property="totalCost" jdbcType="DECIMAL"/>
        <result column="cost_remark" property="costRemark" jdbcType="VARCHAR"/>
        <result column="tech_attachment_uuid" property="techAttachmentUuid" jdbcType="VARCHAR"/>
        <result column="business_attachment_uuid" property="businessAttachmentUuid" jdbcType="VARCHAR"/>
        <result column="object_version_number" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="creation_date" property="creationDate" jdbcType="DATE"/>
        <result column="created_by" property="createdBy" jdbcType="DECIMAL"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="last_update_date" property="lastUpdateDate" jdbcType="DATE"/>
        <result column="quotation_scope" property="quotationScope" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="Base_Column_List">
        h.estimated_start_time,
        h.rfx_header_id,
        h.tenant_id,
        h.bid_bond,
        h.bid_file_expense,
        h.rfx_num,
        h.rfx_status,
        h.rfx_title,
        h.template_id,
        h.source_category,
        h.source_method,
        h.pur_organization_id,
        h.company_id,
        case when h.company_name is null then (select hc.company_name from hpfm_company hc where hc.company_id = h.company_id) else h.company_name end as company_name,
        h.auction_direction,
        h.budget_amount,
        h.tax_included_flag,
        h.tax_id,
        h.tax_rate,
        h.currency_code,
        h.exchange_rate_id,
        h.exchange_rate_type,
        h.exchange_rate_date,
        h.exchange_rate_period,
        h.exchange_rate,
        h.rfx_remark,
        h.internal_remark,
        h.quotation_start_date,
        h.quotation_end_date,
        h.sealed_quotation_flag,
        h.open_rule,
        h.auction_ranking,
        h.source_type,
        h.price_category,
        h.payment_type_id,
        h.payment_term_id,
        h.round_number,
        h.version_number,
        h.quotation_order_type,
        h.quotation_running_duration,
        h.quotation_interval,
        h.auction_rule,
        h.auto_defer_flag,
        h.auto_defer_duration,
        h.released_date,
        h.released_by,
        h.terminated_date,
        h.terminated_by,
        h.terminated_remark,
        h.time_adjusted_date,
        h.time_adjusted_by,
        h.time_adjusted_remark,
        h.closed_flag,
        h.source_from,
        h.pretrail_remark,
        h.total_cost,
        h.cost_remark,
        h.tech_attachment_uuid,
        h.business_attachment_uuid,
        h.check_attachment_uuid,
        h.back_pretrial_remark,
        h.object_version_number,
        h.creation_date,
        h.created_by,
        h.last_updated_by,
        h.quotation_type,
        h.last_update_date,
        h.quotation_scope,
        h.start_flag,
        h.start_quotation_running_duration,
        h.unit_id,
        h.created_unit_id,
        h.created_unit_name,
        h.current_sequence_num,
        h.latest_quotation_end_date,
        h.bargain_status,
        h.bargain_end_date,
        h.bargain_attachment_uuid,
        h.purchaser_id,
        (SELECT pur_iu.purchase_agent_name FROM hpfm_purchase_agent pur_iu WHERE h.purchaser_id = pur_iu.purchase_agent_id) as purchaser_name,
        h.multi_currency_flag,
        h.pretrial_uuid,
        h.pretrial_user_id,
        h.check_remark,
        h.central_purchase_flag,
        h.min_quoted_supplier,
        h.checked_by,
        h.matter_require_flag,
        h.matter_detail,
        h.payment_term_flag,
        h.payment_clause,
        h.rank_rule,
        h.pur_name,
        h.pur_email,
        h.pur_phone,
        h.business_weight,
        h.technology_weight,
        h.finishing_rate,
        h.quotation_change,
        h.score_way,
        h.quotation_rounds,
        h.source_project_id,
        h.project_line_section_id,
        h.multi_section_flag,
        h.only_allow_all_win_bids,
        (SELECT iu.real_name FROM ssrc_rfx_member srm JOIN iam_user iu ON iu.id = srm.user_id WHERE srm.tenant_id = h.tenant_id AND srm.rfx_header_id = h.rfx_header_id AND srm.rfx_role = 'RFX_BY') rfx_by_name,
        (SELECT iu.real_name FROM ssrc_rfx_member srm JOIN iam_user iu ON iu.id = srm.user_id WHERE srm.tenant_id = h.tenant_id AND srm.rfx_header_id = h.rfx_header_id AND srm.rfx_role = 'CHECKED_BY') checked_by_name
    </sql>
    <sql id="Template_Column_List">
        sst.template_name,
        sst.opener_flag,
        sst.password_flag,
        sst.quotation_end_date_flag,
        sst.source_announcement_flag,
        sst.expert_score_type,
        sst.qualification_type,
        sst.max_vendor_quantity,
        sst.min_vendor_number,
        sst.quantity_change_flag,
        sst.tax_change_flag,
        sst.pretrial_flag,
        sst.match_restrict_flag,
        sst.valid_date_input_type,
        sst.source_stage,
        sst.bargain_rule,
        sst.bargain_offline_flag,
        sst.auto_defer_type,
        sst.auto_defer_period,
        sst.max_defer_count,
        sst.diy_ladder_quotation_flag,
        sst.open_bid_order,
        sst.bid_rule_type,
        sst.budget_control_rule,
        sst.freight_updatable_flag,
        sst.template_score_type,
        sst.fast_bidding,
        sst.score_indic_flag,
        sst.selection_strategy,
        sst.quotation_rounds,
        sst.round_quotation_rank_flag,
        sst.round_quotation_rank_rule,
        sst.round_quotation_rule,
        sst.initial_review,
        sst.continuous_quotation_flag
    </sql>
    <sql id="Prequal_Column_List">
        sph.prequal_header_id,
        sph.prequal_end_date,
        sph.prequal_location,
        sph.qualified_limit,
        sph.review_method,
        sph.file_free_flag,
        sph.prequal_file_expense,
        sph.prequal_remark,
        sph.enable_score_flag,
        sph.prequal_attachment_uuid,
        sph.prequal_status,
        sph.approved_date,
        sph.approved_remark,
        sph.manufacturer_type,
        sph.object_version_number as prequal_object_version_number,
        sph.prequal_user_id
    </sql>
    <select id="listRfxHeader" parameterType="org.srm.source.rfx.api.dto.HeaderQueryDTO"
            resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name = "fifteenDaysAgo" value = "@org.apache.commons.lang3.time.DateUtils@truncate(@org.apache.commons.lang.time.DateUtils@addDays(new java.util.Date() , -15), @java.util.Calendar@SECOND)" />
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        <include refid="Prequal_Column_List"/>,
        hpo.organization_name as pur_organization_name,
        ssrh.round_header_status,
        ssrh.round_quotation_end_date,
        ssrh.round_quotation_rule,
        ssrh.quotation_round_number,
        hu.unit_name,
        iu.real_name as create_by_name,
        CONCAT( (select count(1) from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id and feedback_status = 'PARTICIPATED'),
        CONCAT( '/',
        (select count(1) from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id))) as quotation_feed_back,
        (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) as quoted_supplier_quantity,
        (select count(1) from ssrc_prequal_line pl where pl.prequal_header_id = sph.prequal_header_id and pl.prequal_line_status='SUBMITED') enabled_submit_flag
        from ssrc_rfx_header h
        join iam_user iu on iu.id = h.created_by
        join ssrc_source_template sst on sst.template_id = h.template_id
        join ssrc_rfx_member ssrm on h.rfx_header_id = ssrm.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        LEFT JOIN hpfm_unit hu ON h.unit_id = hu.unit_id
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header ssrh on ssrh.tenant_id = h.tenant_id and ssrh.source_header_id = h.rfx_header_id and ssrh.source_from = 'RFX'
        <where>
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
            <if test="rfxHeaderIds != null">
                <if test="rfxHeaderIds != null and rfxHeaderIds.size()>0">
                    and h.rfx_header_id in
                    <foreach collection="rfxHeaderIds" open="(" close=")" separator="," item="rfxHeaderId">
                        #{rfxHeaderId}
                    </foreach>
                </if>
            </if>
            <if test="purchaserId != null">
                and h.purchaser_id = #{purchaserId}
            </if>
            <if test="tenantId != null">
                and h.tenant_id = #{tenantId}
            </if>
            <if test="rfxNum != null and rfxNum != ''">
                <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
                and h.rfx_num like #{rfxNumLike}
            </if>
            <if test="rfxTitle != null and rfxTitle != ''">
                <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
                and h.rfx_title like #{rfxTitleLike}
            </if>
            <if test="sourceMethod != null and sourceMethod != ''">
                and h.source_method = #{sourceMethod}
            </if>
            <if test="sourceCategory != null and sourceCategory != ''">
                and h.source_category = #{sourceCategory}
            </if>
            <if test="rfxStatus != null and rfxStatus != ''">
                <choose>
                    <when test="rfxStatus == 'NOT_START'">
                        and (h.rfx_status = 'IN_QUOTATION' and h.quotation_start_date > #{now}  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                    </when>
                    <when test="rfxStatus == 'PENDING_PREQUAL'">
                        and (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_status = 'NO_APPROVED' and sph.prequal_end_date  &lt; #{now})
                    </when>
                    <when test="rfxStatus == 'IN_PREQUAL'">
                        and (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date > #{now} and sph.prequal_status = 'NO_APPROVED')
                    </when>
                    <when test="rfxStatus == 'IN_QUOTATION'">
                        and (h.rfx_status = 'IN_QUOTATION' and #{now} > h.quotation_start_date and (h.quotation_end_date
                        > #{now} or h.quotation_end_date is null)  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                    </when>
                    <when test="rfxStatus == 'LACK_QUOTED'">
                        and h.quotation_Type != 'OFFLINE'
                        and h.rfx_status = 'IN_QUOTATION' and h.quotation_end_date &lt; #{now} and h.sealed_quotation_flag = '0'
                        and (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &lt; h.min_quoted_supplier
                        and ((sst.qualification_type != 'PRE' and sst.qualification_type != 'PRE_POST') or (sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED'))
                    </when>
                    <when test="rfxStatus == 'OPEN_BID_PENDING'">
                        and (h.rfx_status = 'IN_QUOTATION'
                        and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST')and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE')
                        and h.quotation_end_date &lt; #{now} and sst.opener_flag = '1'
                        and h.sealed_quotation_flag = '1')
                        and (h.quotation_Type = 'OFFLINE' or ((select count(1)
                        from ssrc_rfx_quotation_header srqh
                        where srqh.rfx_header_id = h.rfx_header_id
                        and srqh.tenant_id = h.tenant_id
                        and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt;=
                        case when h.min_quoted_supplier is null then 0 else h.min_quoted_supplier end))
                    </when>
                    <when test="rfxStatus == 'PRETRIAL_PENDING'">
                        and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now})  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}))  and sst.pretrial_flag = '1' and h.pretrial_status = 'NO_TRIAL') or h.rfx_status = 'PRETRIAL_PENDING')
                    </when>
                    <when test="rfxStatus == 'CHECK_PENDING'">
                        and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and ((sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') ) )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and ((sst.pretrial_flag = '0' and h.sealed_quotation_flag = '0' and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') )))
                        and ((select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt;= h.min_quoted_supplier))
                        or h.rfx_status = 'CHECK_PENDING')
                    </when>
                    <when test="rfxStatus == 'SCORING'">
                        and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and (sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'ONLINE') )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and (sst.pretrial_flag = '0' and h.sealed_quotation_flag = '1' AND sst.opener_flag != '1'  and sst.expert_score_type = 'ONLINE' )))
                        and ((select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt;= h.min_quoted_supplier))
                        or h.rfx_status = 'SCORING' or h.rfx_status = 'RFX_EVALUATION_PENDING' or h.rfx_status = 'PRE_EVALUATION_PENDING')
                        AND ((ssrh.round_header_status = 'CLOSED' AND sst.round_quotation_rule IN ('SCORE','AUTO_SCORE')) OR (sst.round_quotation_rule NOT IN ('SCORE','AUTO_SCORE')))
                    </when>
                    <when test="rfxStatus == 'BARGAINING'">
                        AND (h.bargain_status = 'BARGAINING_OFFLINE' OR h.bargain_status = 'BARGAINING_ONLINE')
                        AND h.bargain_end_date &gt; #{now}
                    </when>
                    <otherwise>
                        and h.rfx_status = #{rfxStatus}
                    </otherwise>
                </choose>
            </if>
            <if test="purOrganizationId != null">
                and h.pur_organization_id = #{purOrganizationId}
            </if>
            <if test="auctionDirection != null and auctionDirection != ''">
                and h.auction_direction = #{auctionDirection}
            </if>
            <if test="currencyCode != null and currencyCode != ''">
                and h.currency_code = #{currencyCode}
            </if>
            <if test="sealedQuotationFlag != null">
                and h.sealed_quotation_flag = #{sealedQuotationFlag}
            </if>
            <if test="allSelectFlag == null or allSelectFlag == 0">
                AND h.rfx_status != 'PAUSED'
                AND h.rfx_status != 'CLOSED'
                AND h.rfx_status != 'CANCELED'
                AND (h.rfx_status != 'FINISHED' or (h.rfx_status = 'FINISHED' and h.check_finished_date is not null and h.check_finished_date> #{fifteenDaysAgo} ))
            </if>
            <if test="createdBy != null">
                AND h.created_by = #{createdBy}
            </if>
            <if test="quotationType != null and quotationType != ''">
                AND h.quotation_type = #{quotationType}
            </if>
            <if test="creationDateFrom != null">
                AND h.creation_date >= #{creationDateFrom}
            </if>
            <if test="creationDateTo != null">
                AND h.creation_date &lt; #{creationDateTo}
            </if>
            <if test="quotationStartDateFrom != null">
                AND h.quotation_start_date >= #{quotationStartDateFrom}
            </if>
            <if test="quotationStartDateTo != null">
                AND h.quotation_start_date &lt; #{quotationStartDateTo}
            </if>
            <if test="quotationEndDateFrom != null">
                AND h.quotation_end_date >= #{quotationEndDateFrom}
            </if>
            <if test="quotationEndDateTo != null">
                AND h.quotation_end_date &lt; #{quotationEndDateTo}
            </if>
            <if test="ouId != null">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.ou_id = #{ouId})
            </if>
            <if test="taxIncludedFlag != null">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.tax_included_flag = #{taxIncludedFlag})
            </if>
            <if test="supplierCompanyName != null and supplierCompanyName != ''">
                <bind name="supplierCompanyNameLike" value="'%'+supplierCompanyName+'%'"/>
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_supplier ssls WHERE ssls.rfx_header_id = h.rfx_header_id AND
                ssls.supplier_company_name LIKE #{supplierCompanyNameLike})
            </if>
            <if test="prNum != null and prNum != ''">
                <bind name="prNumLike" value="'%'+prNum+'%'"/>
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.pr_num LIKE #{prNumLike})
            </if>
            <if test="prLineNum != null and prLineNum != ''">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.pr_line_num = #{prLineNum})
            </if>
            <if test="createdUnitId != null">
                AND h.created_unit_id = #{createdUnitId}
            </if>
            <if test="createdUnitName != null and createdUnitName != ''">
                <bind name="createdUnitNameLike" value="'%'+createdUnitName+'%'"/>
                AND h.created_unit_name LIKE  #{createdUnitNameLike}
            </if>
            <if test="rfxStatusSet != null and rfxStatusSet.size() > 0">
                AND (
                <foreach collection="rfxStatusSet" item="rfxStatus" index="index" separator=" or ">
                    <choose>
                        <when test="rfxStatus == 'NOT_START'">
                            (h.rfx_status = 'IN_QUOTATION' and h.quotation_start_date > #{now}  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                        </when>
                        <when test="rfxStatus == 'PENDING_PREQUAL'">
                            (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_status = 'NO_APPROVED' and sph.prequal_end_date  &lt; #{now})
                        </when>
                        <when test="rfxStatus == 'IN_PREQUAL'">
                            (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date > #{now} and sph.prequal_status = 'NO_APPROVED')
                        </when>
                        <when test="rfxStatus == 'IN_QUOTATION'">
                            (h.rfx_status = 'IN_QUOTATION' and #{now} > h.quotation_start_date and (h.quotation_end_date
                            > #{now} or h.quotation_end_date is null)  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                        </when>
                        <when test="rfxStatus == 'LACK_QUOTED'">
                            (h.rfx_status = 'IN_QUOTATION' and h.quotation_end_date &lt; #{now} and h.sealed_quotation_flag = '0'
                            and h.quotation_Type != 'OFFLINE'
                            and (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &lt; h.min_quoted_supplier
                            and ((sst.qualification_type != 'PRE' and sst.qualification_type != 'PRE_POST') or (sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED')))
                        </when>
                        <when test="rfxStatus == 'OPEN_BID_PENDING'">
                            ((h.rfx_status = 'IN_QUOTATION'
                            and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST')and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE')
                            and h.quotation_end_date &lt; #{now} and sst.opener_flag = '1'
                            and h.sealed_quotation_flag = '1'))
                            and (h.quotation_Type = 'OFFLINE' or ((select count(1)
                            from ssrc_rfx_quotation_header srqh
                            where srqh.rfx_header_id = h.rfx_header_id
                            and srqh.tenant_id = h.tenant_id
                            and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt;=
                            case when h.min_quoted_supplier is null then 0 else h.min_quoted_supplier end))
                        </when>
                        <when test="rfxStatus == 'PRETRIAL_PENDING'">
                            ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now})  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}))  and sst.pretrial_flag = '1' and h.pretrial_status = 'NO_TRIAL') or h.rfx_status = 'PRETRIAL_PENDING')
                        </when>
                        <when test="rfxStatus == 'CHECK_PENDING'">
                            ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and ((sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') ) )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and ((sst.pretrial_flag = '0' and h.sealed_quotation_flag = '0' and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') )))
                            and ((select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt; h.min_quoted_supplier))
                            or h.rfx_status = 'CHECK_PENDING')
                        </when>
                        <when test="rfxStatus == 'SCORING'">
                            ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and (sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'ONLINE') )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and (sst.pretrial_flag = '0' and h.sealed_quotation_flag = '1' AND sst.opener_flag != '1'  and sst.expert_score_type = 'ONLINE' )))
                            and ((select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt; h.min_quoted_supplier))
                            or h.rfx_status = 'SCORING' or h.rfx_status = 'RFX_EVALUATION_PENDING' or h.rfx_status = 'PRE_EVALUATION_PENDING')
                            AND ((ssrh.round_header_status = 'CLOSED' AND sst.round_quotation_rule IN ('SCORE','AUTO_SCORE')) OR (sst.round_quotation_rule NOT IN ('SCORE','AUTO_SCORE')))
                        </when>
                        <when test="rfxStatus == 'BARGAINING'">
                            (h.bargain_status = 'BARGAINING_OFFLINE' OR h.bargain_status = 'BARGAINING_ONLINE')
                            AND h.bargain_end_date &gt; #{now}
                        </when>
                        <otherwise>
                            h.rfx_status = #{rfxStatus}
                        </otherwise>
                    </choose>
                </foreach>
                )
            </if>
            <if test="queryParam != null and queryParam != ''">
                <bind name="queryParamLike" value="'%'+queryParam+'%'"/>
                and (
                h.rfx_num like #{queryParamLike} or
                h.rfx_title like #{queryParamLike} or
                exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_num like #{queryParamLike})  or
                h.rfx_status in (select lv.value from hpfm_lov_value lv join hpfm_lov_value_tl lvtl on lv.lov_value_id = lvtl.lov_value_id and lvtl.lang = #{lang} where lv.lov_code = 'SSRC.RFX_STATUS' and lv.meaning like #{queryParamLike})
                )
            </if>
        </where>
    </select>
    <sql id="RfxDTO_List">
        srh.rfx_header_id,
        srh.latest_quotation_end_date,
        srh.tenant_id,
        srh.rfx_num,
        srh.bid_bond,
        srh.bid_file_expense,
        srh.rfx_title,
        case when sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST' then srqh.pre_approve_status else null end AS prequal_line_status,
        srh.tech_attachment_uuid,
        srh.business_attachment_uuid,
        srh.estimated_start_time,
        srh.quotation_start_date,
        srh.quotation_end_date,
        srh.company_id,
        srh.company_name,
        srh.quotation_type,
        srh.template_id,
        sst.template_name,
        srh.source_category,
        srh.source_method,
        srh.auction_direction,
        srh.open_rule,
        srh.approved_date,
        srh.released_date,
        srh.auction_ranking,
        srh.rfx_status,
        srh.round_number,
        srh.currency_code,
        srh.released_by,
        srh.bargain_status,
        srqh.bargain_end_date,
        iu.real_name,
        srh.object_version_number,
        srqh.quotation_header_id,
        srqh.bargain_flag,
        sst.qualification_type,
        sst.expert_score_type,
        srh.quotation_rounds,
        sst.round_quotation_rank_flag,
        sst.round_quotation_rank_rule,
        sst.round_quotation_rule,
        sph.prequal_end_date,
        sph.prequal_status,
        sst.opener_flag,
        srh.sealed_quotation_flag,
        sst.pretrial_flag,
        ssrh.round_header_status,
        ssrh.round_quotation_end_date,
        ssrh.quotation_round_number,
        srh.matter_require_flag,
        srh.matter_detail,
        srh.project_line_section_id
    </sql>
    <sql id="List_All">
        srqh.quotation_header_id,
        srls.supplier_company_id,
        srls.supplier_company_name,
        srls.feedback_status,
        srh.rfx_header_id,
        (
        CASE
        WHEN sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST'
        THEN srqh.pre_approve_status
        else null
        END
        )AS prequal_line_status,
        srh.tenant_id,
        srh.rfx_num,
        srh.rfx_title,
        srh.tech_attachment_uuid,
        srh.business_attachment_uuid,
        srh.quotation_start_date,
        srh.quotation_end_date,
        srh.company_id,
        srh.company_name,
        srh.template_id,
        sst.template_name,
        srh.quotation_rounds,
        sst.round_quotation_rank_flag,
        sst.round_quotation_rank_rule,
        srh.source_category,
        srh.source_method,
        srh.auction_direction,
        srh.open_rule,
        srh.approved_date,
        srh.released_date,
        srh.auction_ranking,
        srqh.supplier_tenant_id,
        CASE WHEN srh.rfx_status = 'IN_QUOTATION' AND sst.qualification_type IS NOT NULL AND sst.qualification_type LIKE '%PRE%' AND sph.prequal_end_date IS NOT NULL AND sph.prequal_end_date > #{now} THEN 'IN_PREQUAL'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND sst.qualification_type IS NOT NULL AND sst.qualification_type LIKE '%PRE%' AND (sph.prequal_end_date IS NULL OR sph.prequal_end_date &lt; #{now}) AND sph.prequal_status = 'NO_APPROVED' THEN 'PENDING_PREQUAL'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND srh.quotation_start_date IS NOT NULL AND srh.quotation_start_date > #{now} THEN 'NOT_START'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND (srh.quotation_end_date IS NULL OR srh.quotation_end_date >#{now}) THEN 'IN_QUOTATION'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND sst.opener_flag = 1 AND srh.sealed_quotation_flag = 1 THEN 'OPEN_BID_PENDING'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND sst.pretrial_flag = 1 THEN 'PRETRIAL_PENDING'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND sst.pretrial_flag = 0 AND srh.sealed_quotation_flag =0 AND sst.expert_score_type = 'ONLINE' THEN 'SCORING'
        WHEN srh.rfx_status = 'IN_QUOTATION' AND (sst.qualification_type IS NULL OR sst.qualification_type NOT LIKE '%PRE%') AND (srh.quotation_start_date IS NULL OR srh.quotation_start_date &lt; #{now})
        AND srh.quotation_end_date IS NOT NULL AND srh.quotation_end_date &lt; #{now} AND sst.pretrial_flag = 0 AND (srh.sealed_quotation_flag =1 OR sst.expert_score_type != 'ONLINE') THEN 'CHECK_PENDING'
        ELSE srh.rfx_status END rfx_status,
        srh.round_number,
        srh.currency_code,
        srh.bid_bond,
        srh.bid_file_expense,
        srh.released_by,
        iu.real_name,
        srh.object_version_number,
        sst.qualification_type,
        sph.prequal_end_date,
        sph.prequal_status,
        sst.opener_flag,
        srh.sealed_quotation_flag,
        sst.pretrial_flag,
        sst.expert_score_type
    </sql>
    <select id="selectOneRfxHeader" parameterType="org.srm.source.rfx.api.dto.HeaderQueryDTO"
            resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        <include refid="Prequal_Column_List"/>,
        iu.real_name,
        ssrh.quotation_round_number,
        hpo.organization_name as pur_organization_name,
        --(SELECT sum(ql.allotted_quantity * ql.valid_quotation_price * qh.exchange_rate / CASE WHEN srli.batch_price IS NULL OR srli.batch_price = 0 THEN 1 ELSE srli.batch_price END ) FROM ssrc_rfx_quotation_header qh JOIN ssrc_rfx_quotation_line ql ON ql.quotation_header_id = qh.quotation_header_id AND ql.round_number = qh.round_number JOIN ssrc_rfx_line_item srli ON ql.rfx_line_item_id = srli.rfx_line_item_id WHERE qh.rfx_header_id = h.rfx_header_id AND qh.round_number = h.round_number) AS total_price,
        pt.type_name as payment_type_name,
        spt.term_name as payment_term_name,
        ssrh.round_quotation_end_date,
        ssrh.round_header_status,
        ssrh.round_quotation_rule,
        ssrh.starting_reason,
        sct.currency_name currency_code_meaning,
        sst.tax_included_flag as template_tax_included_flag,
        sst.tax_id as template_tax_id,
        sst.expert_source,
        st.tax_rate as template_tax_rate,
        sst.freight_included_flag as template_freight_included_flag,
        case WHEN h.sealed_quotation_flag = '1' THEN (select count(1) from ssrc_rfx_member rmb where rmb.rfx_header_id = h.rfx_header_id and rmb.rfx_role = 'OPENED_BY' and rmb.opened_flag = '0')  ELSE 0 end as unopened_number,
        (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and srqh.quotation_status in ('QUOTED','FINISHED','ROUND_QUOTATION')) as quoted_supplier_quantity,
        hut.unit_name
        from
        ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join smdm_tax st on st.tax_id = sst.tax_id
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join smdm_payment_type pt on pt.type_id = h.payment_type_id
        left join smdm_payment_term spt on spt.term_id = h.payment_term_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join iam_user iu on sph.prequal_user_id = iu.id
        left join hpfm_unit_tl hut on hut.unit_id = h.unit_id and hut.lang = #{lang}
        left join ssrc_round_header ssrh on ssrh.tenant_id = h.tenant_id and ssrh.source_header_id = h.rfx_header_id and ssrh.source_from = 'RFX'
        left join smdm_currency sc on sc.currency_code = h.currency_code and sc.tenant_id = h.tenant_id
        left join smdm_currency_tl sct on sc.currency_id = sct.currency_id and sct.lang = #{lang}
        <where>
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
            <if test="tenantId != null">
                and h.tenant_id = #{tenantId}
            </if>
        </where>
    </select>

    <select id="selectRfxTotalPrice" resultType="java.math.BigDecimal">
        SELECT sum(ql.allotted_quantity * ql.valid_quotation_price * qh.exchange_rate /
                   CASE WHEN srli.batch_price IS NULL OR srli.batch_price = 0 THEN 1 ELSE srli.batch_price END)
        FROM ssrc_rfx_quotation_header qh
                 JOIN ssrc_rfx_quotation_line ql
                      ON ql.quotation_header_id = qh.quotation_header_id AND ql.round_number = qh.round_number
                 JOIN ssrc_rfx_line_item srli ON ql.rfx_line_item_id = srli.rfx_line_item_id
        WHERE qh.rfx_header_id = #{rfxHeaderId} AND qh.round_number = #{roundNumber}
        group by qh.rfx_header_id
    </select>
    <!--根据询价单头ID 查询询价单是否在当前时间有效期范围内 -->
    <select id="queryValidTimeRFQ" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        SELECT
            srh.rfx_header_id,
            srh.tenant_id,
            srh.rfx_num,
            srh.rfx_status,
            srh.rfx_title,
            srh.template_id,
            srh.source_category,
            srh.source_method,
            srh.pur_organization_id,
            srh.company_id,
            srh.company_name,
            srh.auction_direction,
            srh.budget_amount,
            srh.tax_included_flag,
            srh.tax_id,
            srh.tax_rate,
            srh.currency_code,
            srh.exchange_rate_id,
            srh.exchange_rate_type,
            srh.exchange_rate_date,
            srh.exchange_rate_period,
            srh.exchange_rate,
            srh.rfx_remark,
            srh.quotation_start_date,
            srh.quotation_end_date,
            srh.sealed_quotation_flag,
            srh.open_rule,
            srh.auction_ranking,
            srh.source_type,
            srh.price_category,
            srh.payment_type_id,
            srh.payment_term_id,
            srh.round_number,
            srh.version_number,
            srh.quotation_order_type,
            srh.quotation_running_duration,
            srh.quotation_interval,
            srh.auction_rule,
            srh.auto_defer_flag,
            srh.auto_defer_duration,
            srh.released_date,
            srh.released_by,
            srh.terminated_date,
            srh.terminated_by,
            srh.terminated_remark,
            srh.approved_date,
            srh.approved_by,
            srh.approved_remark,
            srh.time_adjusted_date,
            srh.time_adjusted_by,
            srh.time_adjusted_remark,
            srh.closed_flag,
            srh.source_from,
            srh.pretrail_remark,
            srh.total_cost,
            srh.cost_remark,
            srh.tech_attachment_uuid,
            srh.business_attachment_uuid,
            srh.object_version_number,
            srh.creation_date,
            srh.created_by,
            srh.last_updated_by,
            srh.bid_bond,
            srh.bid_file_expense,
            srh.last_update_date
        FROM
            ssrc_rfx_quotation_header srqh
                JOIN ssrc_rfx_header srh ON srh.rfx_header_id=srqh.rfx_header_id AND srh.quotation_start_date &lt;=#{currentTime}
                AND    (srh.quotation_end_date &gt;= #{currentTime} OR srh.quotation_end_date IS NULL)
        WHERE srqh.quotation_header_id=#{quotationHeaderId}
    </select>


    <select id="selectSupplierRfxHeader" resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Prequal_Column_List"/>,
        iu.real_name,
        h.rfx_header_id,
        h.tenant_id,
        h.rfx_num,
        h.rfx_status,
        h.rfx_title,
        h.template_id,
        sst.template_name,
        h.source_category,
        h.source_method,
        h.pur_organization_id,
        hpo.organization_name as pur_organization_name,
        h.company_id,
        h.company_name,
        h.auction_direction,
        h.budget_amount,
        h.tax_included_flag,
        h.tax_id,
        h.tax_rate,
        h.currency_code,
        h.exchange_rate_id,
        h.exchange_rate_type,
        h.exchange_rate_date,
        h.exchange_rate_period,
        h.exchange_rate,
        h.payment_clause,
        h.rfx_remark,
        h.quotation_start_date,
        h.quotation_end_date,
        h.sealed_quotation_flag,
        h.open_rule,
        h.auction_ranking,
        h.source_type,
        h.price_category,
        h.payment_type_id,
        h.payment_term_id,
        h.round_number,
        h.version_number,
        h.quotation_order_type,
        h.quotation_running_duration,
        h.quotation_interval,
        h.quotation_rounds,
        h.auction_rule,
        h.auto_defer_flag,
        h.auto_defer_duration,
        h.released_date,
        h.released_by,
        h.terminated_date,
        h.terminated_by,
        h.terminated_remark,
        h.approved_date,
        h.approved_by,
        h.approved_remark,
        h.time_adjusted_date,
        h.time_adjusted_by,
        h.time_adjusted_remark,
        h.closed_flag,
        h.source_from,
        h.pretrail_remark,
        h.total_cost,
        h.cost_remark,
        h.tech_attachment_uuid,
        h.business_attachment_uuid,
        h.object_version_number,
        h.creation_date,
        h.payment_term_flag,
        sst.opener_flag,
        sst.round_quotation_rank_flag,
        sst.round_quotation_rank_rule,
        sst.round_quotation_rule,
        h.bid_bond,
        h.bid_file_expense,
        h.matter_require_flag,
        h.matter_detail,
        srqh.quotation_header_id,
        srqh.tech_attachment_uuid as supplier_tech_attachment_uuid,
        srqh.business_attachment_uuid as supplier_business_attachment_uuid,
        sst.source_announcement_flag,
        (case when sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST' then 1 else 0 end) as pre_qualification_flag,
        pt.type_name as payment_type_name,
        spt.term_name as payment_term_name,
        sp.source_project_num,
        sp.source_project_name,
        spls.section_code,
        spls.section_name,
        sp.subject_matter_rule,
        h.project_line_section_id
        from
        ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join iam_user iu on sph.prequal_user_id = iu.id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON h.rfx_header_id = srqh.rfx_header_id and srqh.quotation_header_id = #{quotationHeaderId}
        LEFT JOIN smdm_payment_type pt on pt.type_id = srqh.payment_type_id
        LEFT JOIN smdm_payment_term spt on spt.term_id = srqh.payment_term_id
        LEFT JOIN ssrc_source_project sp on h.source_project_id = sp.source_project_id
        left join ssrc_project_line_section spls on spls.project_line_section_id = h.project_line_section_id
        <where>
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
        </where>
    </select>


    <select id="batchListRfx" parameterType="org.srm.source.cux.rfx.api.controller.dto.RcwlRfxDTO"
            resultType="org.srm.source.cux.rfx.api.controller.dto.RcwlRfxDTO">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        select
        *
        from
        (
        SELECT
        sst.fast_bidding,
        sst.only_allow_all_win_bids,
        sst.bid_bond_flag,
        srqh.sign_in_flag,
        srls.supplier_company_id as supplier_company_id,
        srls.supplier_company_name as supplier_company_name,
        srls.feedback_status,
        srls.source_matter_confirm_flag,
        srqh.quotation_status,
        srqh.pre_approve_status,
        (CASE WHEN (srh.latest_quotation_end_date is not null and srh.latest_quotation_end_date &lt; #{now}) THEN 1 ELSE 0 END) AS quotation_end_flag,
        CASE WHEN (srh.sealed_quotation_flag = '1' and sst.opener_flag = '1' and (select count(1) from ssrc_rfx_member rmb where rmb.rfx_header_id = srh.rfx_header_id and rmb.rfx_role = 'OPENED_BY' and rmb.opened_flag = '0') > 0) THEN 0  ELSE 1 end as opened_flag,
        <include refid="RfxDTO_List"/>,
        ssp.source_project_name,
        ssp.subject_matter_rule,
        srh.attribute_datetime7,
        spls.section_name
        FROM
        ssrc_rfx_header srh
        LEFT JOIN ssrc_round_header ssrh on ssrh.tenant_id = srh.tenant_id and ssrh.source_header_id = srh.rfx_header_id and ssrh.source_from = 'RFX'
        JOIN ssrc_source_template sst ON srh.template_id = sst.template_id
        JOIN ssrc_rfx_line_supplier srls ON srh.rfx_header_id = srls.rfx_header_id AND srh.tenant_id = srls.tenant_id
        JOIN hpfm_company hc ON srls.supplier_tenant_id = hc.tenant_id and srls.supplier_company_id = hc.company_id
        JOIN iam_user iu ON srh.released_by = iu.id
        LEFT JOIN ssrc_prequal_header sph ON srh.rfx_header_id = sph.rfx_header_id and sph.tenant_id = srh.tenant_id and sph.prequal_category = 'RFX'
        LEFT JOIN ssrc_rfx_quotation_header srqh ON srh.rfx_header_id = srqh.rfx_header_id AND srqh.supplier_company_id = srls.supplier_company_id AND srqh.round_number = srh.round_number
        LEFT JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id AND ssp.tenant_id = srh.tenant_id
        LEFT JOIN ssrc_project_line_section spls ON spls.project_line_section_id = srh.project_line_section_id AND spls.tenant_id = srh.tenant_id
        WHERE
        srls.supplier_tenant_id = #{supplierTenantId}
        AND srh.tenant_id = #{tenantId}
        AND srh.source_method = 'INVITE'
        AND EXISTS ( SELECT sa.rfx_line_supplier_id FROM ssrc_rfx_item_sup_assign sa WHERE sa.invite_flag = 1 AND sa.rfx_header_id = srh.rfx_header_id AND sa.rfx_line_supplier_id = srls.rfx_line_supplier_id)
        UNION ALL
        SELECT
        sst.fast_bidding,
        sst.only_allow_all_win_bids,
        sst.bid_bond_flag,
        srqh.sign_in_flag,
        hc.company_id as supplier_company_id,
        hc.company_name as supplier_company_name,
        srls.feedback_status,
        srls.source_matter_confirm_flag,
        srqh.quotation_status,
        srqh.pre_approve_status,
        (CASE WHEN (srh.latest_quotation_end_date is not null and srh.latest_quotation_end_date &lt; #{now}) THEN 1 ELSE 0 END) AS quotation_end_flag,
        CASE WHEN (srh.sealed_quotation_flag = '1' and sst.opener_flag = '1' and (select count(1) from ssrc_rfx_member rmb where rmb.rfx_header_id = srh.rfx_header_id and rmb.rfx_role = 'OPENED_BY' and rmb.opened_flag = '0') > 0) THEN 0  ELSE 1 end as opened_flag,
        <include refid="RfxDTO_List"/>,
        ssp.source_project_name,
        ssp.subject_matter_rule,
        srh.attribute_datetime7,
        spls.section_name
        FROM
        ssrc_rfx_header srh
        LEFT JOIN ssrc_round_header ssrh on ssrh.tenant_id = srh.tenant_id and ssrh.source_header_id = srh.rfx_header_id and ssrh.source_from = 'RFX'
        JOIN ssrc_source_template sst ON srh.template_id = sst.template_id
        JOIN iam_user iu ON srh.released_by = iu.id
        JOIN spfm_partner sp ON sp.tenant_id = srh.tenant_id AND sp.company_id = srh.company_id AND sp.partner_tenant_id = #{supplierTenantId} AND sp.enabled_flag = '1'
        JOIN hpfm_company hc ON hc.tenant_id = sp.partner_tenant_id AND hc.company_id = sp.partner_company_id
        LEFT JOIN ssrc_prequal_header sph ON srh.rfx_header_id = sph.rfx_header_id and sph.tenant_id = srh.tenant_id and sph.prequal_category = 'RFX'
        LEFT JOIN ssrc_rfx_line_supplier srls ON srh.rfx_header_id = srls.rfx_header_id AND srh.tenant_id = srls.tenant_id AND hc.company_id = srls.supplier_company_id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON srh.rfx_header_id = srqh.rfx_header_id AND hc.company_id = srqh.supplier_company_id AND srqh.round_number = srh.round_number
        LEFT JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id AND ssp.tenant_id = srh.tenant_id
        LEFT JOIN ssrc_project_line_section spls ON spls.project_line_section_id = srh.project_line_section_id AND spls.tenant_id = srh.tenant_id
        WHERE
        srh.tenant_id = #{tenantId}
        AND srh.source_method = 'OPEN'
        AND (srqh.quotation_header_id IS NOT NULL OR ssrh.round_header_status NOT IN ('ROUND_CHECKING','ROUND_SCORING') OR ssrh.round_header_status IS NULL)
        <if test="userDetails.tenantNum != 'T23877' and userDetails.tenantNum != 'T24426'">
        UNION ALL
        SELECT
        sst.only_allow_all_win_bids,
        sst.fast_bidding,
        sst.bid_bond_flag,
        srqh.sign_in_flag,
        hc.company_id AS supplier_company_id,
        hc.company_name AS supplier_company_name,
        srls.feedback_status,
        srls.source_matter_confirm_flag,
        srqh.quotation_status,
        srqh.pre_approve_status,
        (CASE WHEN (srh.latest_quotation_end_date is not null and srh.latest_quotation_end_date &lt; #{now}) THEN 1 ELSE 0 END) AS quotation_end_flag,
        CASE WHEN (srh.sealed_quotation_flag = '1' and sst.opener_flag = '1' and (select count(1) from ssrc_rfx_member rmb where rmb.rfx_header_id = srh.rfx_header_id and rmb.rfx_role = 'OPENED_BY' and rmb.opened_flag = '0') > 0) THEN 0  ELSE 1 end as opened_flag,
        <include refid="RfxDTO_List"/>,
        ssp.source_project_name,
        ssp.subject_matter_rule,
        srh.attribute_datetime7,
        spls.section_name
        FROM
        ssrc_rfx_header srh
        LEFT JOIN ssrc_round_header ssrh on ssrh.tenant_id = srh.tenant_id and ssrh.source_header_id = srh.rfx_header_id and ssrh.source_from = 'RFX'
        JOIN ssrc_source_template sst ON srh.template_id = sst.template_id
        JOIN iam_user iu ON srh.released_by = iu.id
        JOIN hiam_user_authority hua on hua.user_id = #{userId} and hua.authority_type_code = 'COMPANY'
        left JOIN hiam_user_authority_line hual on hual.authority_id = hua.authority_id
        JOIN hpfm_company hc ON (hc.tenant_id = hual.tenant_id AND hc.company_id = hual.data_id) or (hua.include_all_flag = 1 and hc.tenant_id = hua.tenant_id )
        LEFT JOIN ssrc_prequal_header sph ON srh.rfx_header_id = sph.rfx_header_id and sph.tenant_id = srh.tenant_id and sph.prequal_category = 'RFX'
        LEFT JOIN ssrc_rfx_line_supplier srls ON srh.rfx_header_id = srls.rfx_header_id
        AND srh.tenant_id = srls.tenant_id
        AND hc.company_id = srls.supplier_company_id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON srh.rfx_header_id = srqh.rfx_header_id AND hc.company_id = srqh.supplier_company_id AND srqh.round_number = srh.round_number
        LEFT JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id AND ssp.tenant_id = srh.tenant_id
        LEFT JOIN ssrc_project_line_section spls ON spls.project_line_section_id = srh.project_line_section_id AND spls.tenant_id = srh.tenant_id
        WHERE
        srh.source_method = 'ALL_OPEN'
        <if test="tenantId == supplierTenantId">
            AND srh.tenant_id != #{tenantId}
        </if>
        <if test="tenantId != supplierTenantId">
            AND srh.tenant_id = #{tenantId}
        </if>
        AND (srqh.quotation_header_id IS NOT NULL OR ssrh.round_header_status NOT IN ('ROUND_CHECKING','ROUND_SCORING') OR ssrh.round_header_status IS NULL)
        </if>
        ) union_all
        WHERE
        union_all.rfx_status NOT IN ( 'NEW', 'RELEASE_APPROVING', 'RELEASE_REJECTED', 'ROUNDED','FINISHED','CLOSED','CANCELED')
        AND union_all.quotation_type!='OFFLINE'
        AND ( union_all.feedback_status != 'ABANDONED' OR union_all.feedback_status IS NULL )
        AND (union_all.latest_quotation_end_date > #{now} OR union_all.latest_quotation_end_date IS NULL OR (union_all.latest_quotation_end_date &lt; #{now} AND  union_all.quotation_type != 'OFFLINE' AND union_all.feedback_status IS NOT NULL AND union_all.feedback_status != 'NEW'))
        <if test="rfxNum != null and rfxNum != ''">
            <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
            and union_all.rfx_num like #{rfxNumLike}
        </if>
        <if test="rfxTitle != null and rfxTitle != ''">
            <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
            and union_all.rfx_title like #{rfxTitleLike}
        </if>
        <if test="companyId != null">
            and union_all.company_id = #{companyId}
        </if>
        <if test="sourceCategory != null and sourceCategory != ''">
            and union_all.source_category = #{sourceCategory}
        </if>
        <if test="sourceMethod != null and sourceMethod != ''">
            and union_all.source_method = #{sourceMethod}
        </if>
        <if test="auctionDirection != null and auctionDirection != ''">
            and union_all.auction_direction = #{auctionDirection}
        </if>
        <!-- 报价大厅增加状态查询字段 -->
        <if test="quotationHeaderStatus != null and quotationHeaderStatus != ''">
            <choose>
                <when test="quotationHeaderStatus == 'NOT_PARTICIPATED'"> <!-- 尚未参与 -->
                    and (union_all.rfx_status = 'NOT_START' and union_all.feedback_status is null)
                </when>
                <when test="quotationHeaderStatus == 'NOT_START'"> <!-- 未开始 -->
                    and union_all.rfx_status = 'NOT_START' and union_all.feedback_status = 'PARTICIPATED'
                </when>
                <when test="quotationHeaderStatus == 'ABANDONED'"> <!-- 已放弃 -->
                    and union_all.rfx_status = 'NOT_START' and union_all.feedback_status = 'ABANDONED'
                </when>
                <when test="quotationHeaderStatus == 'PENDING_PREQUAL'"> <!-- 待资格预审 -->
                    and union_all.rfx_status = 'IN_PREQUAL'
                </when>
                <when test="quotationHeaderStatus == 'IN_PREQUAL'"> <!-- 资格预审中 -->
                    and union_all.rfx_status = 'PENDING_PREQUAL'
                </when>
                <when test="quotationHeaderStatus == 'NOT_BIDDING'"> <!-- 未入围 -->
                    and union_all.rfx_status = 'PENDING_PREQUAL' and union_all.prequal_line_status = 'REFUSED'
                    <!-- 还需加上初审未入围 暂时不做 -->
                </when>
                <when test="quotationHeaderStatus == 'BIDDING'"> <!-- 已入围 -->
                    and union_all.rfx_status = 'PENDING_PREQUAL' and union_all.prequal_line_status = 'APPROVED'
                    <!-- 还需加上初审已入围 暂时不做 -->
                </when>
                <when test="quotationHeaderStatus == 'NOT_QUOTED'"> <!-- 未报价 -->
                    and (((union_all.rfx_status = 'IN_QUOTATION'
                    and union_all.quotation_start_date &gt; #{now}
                    and (union_all.quotation_end_date is null or union_all.quotation_end_date &gt; #{now}))
                    or union_all.rfx_status = 'ROUND_QUOTATION')
                    and (union_all.quotation_status = 'NEW' or union_all.quotation_status is null))
                    AND union_all.feedback_status = 'PARTICIPATED'
                    and !(union_all.source_category='RFA' and  union_all.quotation_start_date is null)
                </when>
                <when test="quotationHeaderStatus == 'QUOTED'"> <!-- 已报价 -->
                    and (((union_all.rfx_status = 'IN_QUOTATION' or union_all.rfx_status = 'ROUND_QUOTATION') and union_all.quotation_status = 'QUOTED')
                    or ((union_all.round_header_status = 'ROUND_SCORING' or union_all.bargain_flag = 1) and union_all.quotation_status = 'QUOTED' and union_all.rfx_status not in ('PRE_EVALUATION_PENDING','SCORING')))
                </when>
                <when test="quotationHeaderStatus == 'BARGAINED'"> <!-- 已还价-->
                    and union_all.rfx_status = 'IN_QUOTATION'
                    and union_all.quotation_status = 'QUOTED'
                    and (union_all.quotation_end_date is null or union_all.quotation_end_date &gt; #{now})
                    and EXISTS (select null from ssrc_rfx_quotation_line srqlb
                    where srqlb.quotation_header_id = union_all.quotation_header_id
                    and srqlb.quotation_line_status = 'BARGAINED'
                    and srqlb.bargain_flag = 1
                    )
                </when>
                <when test="quotationHeaderStatus == 'BARGAINED_REPLIED'"> <!-- 还价已回复-->
                    and union_all.rfx_status = 'IN_QUOTATION'
                    and union_all.quotation_status = 'QUOTED'
                    and (union_all.quotation_end_date is null or union_all.quotation_end_date &gt; #{now})
                    and NOT EXISTS (select null from ssrc_rfx_quotation_line srqlb
                    where srqlb.quotation_header_id = union_all.quotation_header_id
                    and srqlb.quotation_line_status = 'BARGAINED'
                    and srqlb.bargain_flag = 1
                    )
                    and EXISTS (select null from ssrc_rfx_quotation_line srqlb
                    where srqlb.quotation_header_id = union_all.quotation_header_id
                    and srqlb.quotation_line_status = 'SUBMITTED'
                    and srqlb.bargain_flag = 1
                    )
                </when>
                <when test="quotationHeaderStatus == 'QUOTED_END'"> <!-- 报价截止 -->
                    and (union_all.rfx_status = 'OPEN_BID_PENDING' or union_all.rfx_status = 'OPENED')
                </when>
                <when test="quotationHeaderStatus == 'UNDER_REVIEW'"> <!-- 评审中 -->
                    <!-- 评分未开始 union_all.round_header_status = 'NEW'？ -->
                    and union_all.rfx_status in('SCORING','PRE_EVALUATION_PENDING','RFX_EVALUATION_PENDING')
                </when>
                <when test="quotationHeaderStatus == 'BARGAINING'"> <!-- 议价 -->
                    and (union_all.rfx_status = 'RFX_EVALUATION_PENDING' or union_all.rfx_status = 'CHECK_PENDING') and union_all.bargain_flag = 1
                </when>
                <when test="quotationHeaderStatus == 'ROUND_QUOTATION'"> <!-- 多轮报价 -->
                    and (union_all.rfx_status = 'RFX_EVALUATION_PENDING' or union_all.rfx_status = 'CHECK_PENDING') and union_all.round_header_status = 'ROUND_SCORING'
                </when>
                <when test="quotationHeaderStatus == 'CHECK_PENDING'"> <!-- 核价中 -->
                    and (union_all.rfx_status = 'CHECK_APPROVING' or union_all.rfx_status = 'CHECK_REJECTED')
                </when>
                <when test="quotationHeaderStatus == 'PRETRIAL_PENDING'"> <!-- 待初审 -->
                    and union_all.rfx_status = 'NO_TRIAL'
                </when>
                <when test="quotationHeaderStatus == 'IN_PRETRIAL'"> <!-- 初审中 -->
                    and union_all.rfx_status = 'SUBMITED'
                </when>
                <when test="quotationHeaderStatus == 'BIDDED'"> <!-- 已中标 暂时置为无数据 -->
                    and union_all.rfx_status = ''
                </when>
                <when test="quotationHeaderStatus == 'NOT_BIDDED'"> <!-- 未中标 暂时置为无数据 -->
                    and union_all.rfx_status = ''
                </when>
                <when test="quotationHeaderStatus == 'PAUSED'"> <!-- 暂停 -->
                    and union_all.rfx_status = 'PAUSED'
                </when>
                <when test="quotationHeaderStatus == 'OBSOLETE'"> <!-- 淘汰-->
                    and union_all.rfx_status = ''
                </when>
                <otherwise>
                    and union_all.rfx_status = ''
                </otherwise>
            </choose>
        </if>
        ORDER BY union_all.approved_date DESC, union_all.released_date DESC
    </select>

    <select id="listAllRfx" resultType="org.srm.source.rfx.api.dto.RfxDTO"
            parameterType="org.srm.source.rfx.api.dto.RfxDTO">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        SELECT * FROM (
        SELECT
        <include refid="List_All"/>
        FROM ssrc_rfx_quotation_header srqh
        JOIN ssrc_rfx_header srh ON srh.rfx_header_id = srqh.rfx_header_id AND srqh.round_number = srh.round_number
        JOIN ssrc_source_template sst ON srh.template_id = sst.template_id
        JOIN ssrc_rfx_line_supplier srls ON srh.rfx_header_id = srls.rfx_header_id and srls.rfx_line_supplier_id = srqh.rfx_line_supplier_id
        JOIN hpfm_company hc ON srls.supplier_tenant_id = hc.tenant_id and srls.supplier_company_id = hc.company_id
        AND srh.tenant_id = srls.tenant_id
        JOIN iam_user iu ON srh.released_by = iu.id
        LEFT JOIN ssrc_prequal_header sph ON srh.rfx_header_id = sph.rfx_header_id and sph.prequal_category = 'RFX') tl
        WHERE
        tl.supplier_tenant_id = #{supplierTenantId}
        <if test="tenantId == supplierTenantId">
            AND (( tl.source_method = 'ALL_OPEN'
            AND tl.tenant_id != #{tenantId}) or ( tl.source_method = 'OPEN' AND tl.tenant_id = #{tenantId}) or ( tl.source_method = 'INVITE' ))
        </if>
        <if test="tenantId != supplierTenantId">
            AND tl.tenant_id = #{tenantId}
        </if>
        <if test="rfxNum != null and rfxNum != ''">
            <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
            and tl.rfx_num like #{rfxNumLike}
        </if>
        <if test="rfxTitle != null and rfxTitle != ''">
            <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
            and tl.rfx_title like #{rfxTitleLike}
        </if>
        <if test="companyId != null">
            and tl.company_id = #{companyId}
        </if>
        <if test="sourceCategory != null and sourceCategory != ''">
            and tl.source_category = #{sourceCategory}
        </if>
        <if test="sourceMethod != null and sourceMethod != ''">
            and tl.source_method = #{sourceMethod}
        </if>
        <if test="auctionDirection != null and auctionDirection != ''">
            and tl.auction_direction = #{auctionDirection}
        </if>
        <if test="rfxStatus != null and rfxStatus != ''">
            and tl.rfx_status = #{rfxStatus}
        </if>
        <if test="currencyCode != null and currencyCode != ''">
            and tl.currency_code = #{currencyCode}
        </if>
        <if test="quotationStartDateFrom != null">
            AND tl.quotation_start_date &gt;= #{quotationStartDateFrom}
        </if>
        <if test="quotationStartDateTo != null">
            AND tl.quotation_start_date &lt; #{quotationStartDateTo}
        </if>
        <if test="quotationEndDateFrom != null">
            AND tl.quotation_end_date &gt;= #{quotationEndDateFrom}
        </if>
        <if test="quotationEndDateTo != null">
            AND tl.quotation_end_date &lt; #{quotationEndDateTo}
        </if>
        ORDER BY tl.approved_date DESC, tl.released_date DESC
    </select>
    <select id="listControlRfxHeader" resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        <include refid="Prequal_Column_List"/>,
        ssrh.round_header_status,
        ssrh.round_quotation_end_date,
        ssrh.round_quotation_rule,
        ssrh.quotation_round_number,
        hpo.organization_name as pur_organization_name,
        iu.real_name as create_by_name,
        (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) as quoted_supplier_quantity
        from ssrc_rfx_header h
        join iam_user iu on iu.id = h.created_by
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header ssrh on ssrh.tenant_id = h.tenant_id and ssrh.source_header_id = h.rfx_header_id and ssrh.source_from = 'RFX'
        WHERE h.tenant_id = #{tenantId}
        AND h.rfx_status IN (
        'LACK_QUOTED',
        'NOT_START',
        'PENDING_PREQUAL',
        'IN_PREQUAL',
        'PREQUAL_CUTOFF',
        'IN_QUOTATION',
        'OPEN_BID_PENDING',
        'OPENED',
        'PRETRIAL_PENDING',
        'SCORING',
        'CHECK_PENDING',
        'CHECK_REJECTED',
        'CHECK_APPROVING',
        'IN_POSTQUAL',
        'POSTQUAL_CUTOFF',
        'RFX_EVALUATION_PENDING',
        'INITIAL_REVIEW_SCORING',
        'RFX_INITIAL_REVIEW_PENDING',
        'PAUSED')
        <if test="rfxHeader.rfxNum != null and rfxHeader.rfxNum != ''">
            <bind name="rfxNumLike" value="'%' + rfxHeader.rfxNum + '%'"></bind>
            AND h.rfx_num LIKE #{rfxNumLike}
        </if>
        <if test="rfxHeader.rfxTitle != null and rfxHeader.rfxTitle != ''">
            <bind name="rfxTitleLike" value="'%' + rfxHeader.rfxTitle + '%'"></bind>
            AND h.rfx_title LIKE #{rfxTitleLike}
        </if>
        <if test="rfxHeader.sourceMethod != null">
            AND h.source_method = #{rfxHeader.sourceMethod}
        </if>
        <if test="rfxHeader.sourceCategory != null">
            AND h.source_category = #{rfxHeader.sourceCategory}
        </if>
        <if test="rfxHeader.rfxStatus != null">
            <choose>
                <when test="rfxHeader.rfxStatus == 'PENDING_PREQUAL'">
                    and (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_status = 'NO_APPROVED' and sph.prequal_end_date  &lt; #{now})
                </when>
                <when test="rfxHeader.rfxStatus == 'IN_PREQUAL'">
                    and (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date > #{now} and sph.prequal_status = 'NO_APPROVED')
                </when>
                <when test="rfxHeader.rfxStatus == 'NOT_START'">
                    and (h.rfx_status = 'IN_QUOTATION' and h.quotation_start_date > #{now}  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                </when>
                <when test="rfxHeader.rfxStatus == 'IN_QUOTATION'">
                    and (h.rfx_status = 'IN_QUOTATION' and #{now} > h.quotation_start_date and (h.quotation_end_date
                    > #{now} or h.quotation_end_date is null)  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                </when>
                <when test="rfxHeader.rfxStatus == 'LACK_QUOTED'">
                    and h.rfx_status = 'IN_QUOTATION' and h.quotation_end_date &lt; #{now} and h.sealed_quotation_flag = '0'
                    and (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &lt; h.min_quoted_supplier
                    and ((sst.qualification_type != 'PRE' and sst.qualification_type != 'PRE_POST') or (sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED'))
                </when>
                <when test="rfxHeader.rfxStatus == 'OPEN_BID_PENDING'">
                    and (h.rfx_status = 'IN_QUOTATION' and h.quotation_end_date &lt; #{now} and sst.opener_flag = '1'
                    and h.sealed_quotation_flag = '1')
                </when>
                <when test="rfxHeader.rfxStatus == 'PRETRIAL_PENDING'">
                    and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now})  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now})) and sst.pretrial_flag = '1' and h.pretrial_status = 'NO_TRIAL') or h.rfx_status = 'PRETRIAL_PENDING')
                </when>
                <when test="rfxHeader.rfxStatus == 'CHECK_PENDING'">
                    and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and ((sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') ) )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and ((sst.pretrial_flag = '0' and h.sealed_quotation_flag = '0' and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') )))) or h.rfx_status = 'CHECK_PENDING')
                </when>
                <when test="rfxHeader.rfxStatus == 'SCORING'">
                    and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and (sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'ONLINE') )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and (sst.pretrial_flag = '0' and h.sealed_quotation_flag = '1' and sst.expert_score_type = 'ONLINE' )))) or h.rfx_status = 'SCORING')
                </when>
                <when test="rfxHeader.rfxStatus == 'BARGAINING'">
                    AND (h.bargain_status = 'BARGAINING_OFFLINE' OR h.bargain_status = 'BARGAINING_ONLINE')
                    AND h.bargain_end_date &gt; #{now}
                </when>
                <otherwise>
                    and h.rfx_status = #{rfxHeader.rfxStatus}
                </otherwise>
            </choose>
        </if>
        <if test="rfxHeader.purOrganizationId != null">
            AND h.pur_organization_id = #{rfxHeader.purOrganizationId}
        </if>
        <if test="rfxHeader.auctionDirection != null">
            AND h.auction_direction = #{rfxHeader.auctionDirection}
        </if>
        <if test="rfxHeader.currencyCode != null">
            AND h.currency_code = #{rfxHeader.currencyCode}
        </if>
        <if test="rfxHeader.sealedQuotationFlag != null">
            AND h.sealed_quotation_flag = #{rfxHeader.sealedQuotationFlag}
        </if>
        <if test="rfxHeader.createdUnitId != null">
            AND h.created_unit_id = #{rfxHeader.createdUnitId}
        </if>
        <if test="rfxHeader.createdUnitName != null and rfxHeader.createdUnitName != ''">
            <bind name="createdUnitNameLike" value="'%'+rfxHeader.createdUnitName+'%'"/>
            AND h.created_unit_name LIKE  #{createdUnitNameLike}
        </if>
    </select>
    <select id="selectStatusByIds" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        SELECT
        srh.tenant_id,
        srh.rfx_header_id,
        srh.object_version_number,
        srh.rfx_status,
        srh.bid_bond,
        srh.bid_file_expense,
        srh.rfx_num,
        (
        SELECT process_status from ssrc_rfx_action WHERE rfx_action_id =(SELECT
        MAX(rfx_action_id)
        FROM
        ssrc_rfx_action
        WHERE
        rfx_header_id = srh.rfx_header_id
        AND process_status!='PAUSED'
        )
        ) AS process_status
        FROM
        ssrc_rfx_header srh
        WHERE
        srh.rfx_header_id IN
        <foreach collection="rfxHeaderIds" item="rfxHeaderId" open="(" separator="," close=")">
            #{rfxHeaderId}
        </foreach>
    </select>

    <select id="listOffLineRfxHeader" parameterType="org.srm.source.rfx.api.dto.HeaderQueryDTO"
            resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        <include refid="Prequal_Column_List"/>,
        hpo.organization_name as pur_organization_name,
        iu.real_name as create_by_name,
        ssrh.round_header_status,
        ssrh.round_quotation_end_date,
        ssrh.round_quotation_rule,
        ssrh.quotation_round_number
        from
        ssrc_rfx_header h
        join iam_user iu on iu.id =h.created_by
        join ssrc_rfx_member ssrm on h.rfx_header_id = ssrm.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        left join smdm_currency sc on sc.currency_code = h.currency_code and sc.tenant_id = #{tenantId}
        left join smdm_currency_tl sct on sc.currency_id = sct.currency_id and sct.lang = #{lang}
        left join ssrc_source_template sst on sst.template_id = h.template_id
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header ssrh on ssrh.tenant_id = h.tenant_id and ssrh.source_header_id = h.rfx_header_id and ssrh.source_from = 'RFX'
        <where>
            h.quotation_start_date  &lt; #{now}
            and ((h.quotation_type = 'ON_OFF' and ((h.quotation_end_date &gt; #{now} or h.quotation_end_date IS NULL) or (h.quotation_end_date &lt; #{now} and h.sealed_quotation_flag = 1))  )
            or (h.quotation_type = 'OFFLINE' and ((h.rfx_status = 'IN_QUOTATION' and sst.pretrial_flag = 0) or h.rfx_status in ('SCORING','LACK_QUOTED','CHECK_PENDING')))
            )
            and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE')
            and h.rfx_status not in ('FINISHED','PAUSED','CLOSED','CHECK_APPROVING')
            AND (((h.bargain_status = 'BARGAINING_OFFLINE' OR h.bargain_status = 'BARGAINING_ONLINE') AND h.bargain_end_date &gt; #{now} AND h.quotation_type = 'OFFLINE')
            OR (h.bargain_status != 'BARGAINING_OFFLINE' AND h.bargain_status != 'BARGAINING_ONLINE'))
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
            <if test="tenantId != null">
                and h.tenant_id = #{tenantId}
            </if>
            <if test="companyId != null">
                AND h.company_id = #{companyId}
            </if>
            <if test="rfxNum != null and rfxNum != ''">
                <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
                and h.rfx_num like #{rfxNumLike}
            </if>
            <if test="rfxTitle != null and rfxTitle != ''">
                <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
                and h.rfx_title like #{rfxTitleLike}
            </if>
            <if test="sourceMethod != null and sourceMethod != ''">
                and h.source_method = #{sourceMethod}
            </if>
            <if test="sourceCategory != null and sourceCategory != ''">
                and h.source_category = #{sourceCategory}
            </if>
            <if test="purOrganizationId != null">
                and h.pur_organization_id = #{purOrganizationId}
            </if>
            <if test="auctionDirection != null and auctionDirection != ''">
                and h.auction_direction = #{auctionDirection}
            </if>
            <if test="quotationType != null and quotationType != ''">
                AND h.quotation_type = #{quotationType}
            </if>
            <if test="currencyCode != null and currencyCode != ''">
                and h.currency_code = #{currencyCode}
            </if>
            <if test="sealedQuotationFlag != null">
                and h.sealed_quotation_flag = #{sealedQuotationFlag}
            </if>
            <if test="createdBy != null">
                AND h.created_by = #{createdBy}
            </if>
            <if test="creationDateFrom != null">
                AND h.creation_date >= #{creationDateFrom}
            </if>
            <if test="creationDateTo != null">
                AND h.creation_date &lt; #{creationDateTo}
            </if>
            <if test="quotationStartDateFrom != null">
                AND h.quotation_start_date >= #{quotationStartDateFrom}
            </if>
            <if test="quotationStartDateTo != null">
                AND h.quotation_start_date &lt; #{quotationStartDateTo}
            </if>
            <if test="quotationEndDateFrom != null">
                AND h.quotation_end_date >= #{quotationEndDateFrom}
            </if>
            <if test="quotationEndDateTo != null">
                AND h.quotation_end_date &lt; #{quotationEndDateTo}
            </if>
            <if test="ouId != null">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.ou_id = #{ouId})
            </if>
            <if test="taxIncludedFlag != null">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.tax_included_flag = #{taxIncludedFlag})
            </if>
            <if test="supplierCompanyName != null and supplierCompanyName != ''">
                <bind name="supplierCompanyNameLike" value="'%'+supplierCompanyName+'%'"/>
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_supplier ssls WHERE ssls.rfx_header_id = h.rfx_header_id AND
                ssls.supplier_company_name LIKE #{supplierCompanyNameLike})
            </if>
            <if test="createdUnitId != null">
                AND h.created_unit_id = #{createdUnitId}
            </if>
            <if test="createdUnitName != null and createdUnitName != ''">
                <bind name="createdUnitNameLike" value="'%'+createdUnitName+'%'"/>
                AND h.created_unit_name LIKE  #{createdUnitNameLike}
            </if>
        </where>
    </select>

    <select id="listPreRfxHeaders" parameterType="org.srm.source.share.api.dto.PreRfxHeaderDTO"
            resultType="org.srm.source.share.api.dto.PreRfxHeaderDTO">
        SELECT
        sph.pr_num,
        sph.pr_requested_name,
        sph.request_date,
        sph.remark,
        sph.pr_source_platform,
        sph.purchase_org_id as pur_organization_id,
        hc.company_name,
        hc.company_id,
        hou.ou_name,
        hpa.purchase_agent_name,
        sic.category_name,
        hio.organization_name,
        su.uom_name,
        iu.real_name,
        spl.line_num AS rfx_line_item_num,
        spl.item_code,
        spl.item_name,
        spl.quantity,
        spl.currency_code,
        spl.needed_date,
        spl.assigned_date,
        spl.inv_organization_id,
        spl.category_id AS item_category_id,
        spl.uom_id,
        spl.pr_line_id,
        sph.ou_id
        FROM
        sprm_pr_line spl
        JOIN sprm_pr_header sph ON sph.pr_header_id = spl.pr_header_id
        AND spl.tenant_id = sph.tenant_id
        LEFT JOIN hpfm_purchase_agent hpa ON sph.purchase_agent_id = hpa.purchase_agent_id
        JOIN hpfm_company hc ON hc.company_id = sph.company_id
        LEFT JOIN hpfm_operation_unit hou ON hou.ou_id = sph.ou_id
        LEFT JOIN smdm_item_category sic ON sic.category_id = spl.category_id
        LEFT JOIN hpfm_inv_organization hio ON hio.organization_id = spl.inv_organization_id
        LEFT JOIN smdm_uom su ON su.uom_id = spl.uom_id
        LEFT JOIN iam_user iu ON iu.id = spl.assigned_by
        where
        spl.assigned_by = #{assignedById}
        and sph.pr_status_code = 'APPROVED'
        and spl.source_flag = 0
        <if test="tenantId != null">
            and sph.tenant_id = #{tenantId}
        </if>
        <if test="prNum != null and prNum != ''">
            <bind name="prNumLike" value="'%'+prNum+'%'"/>
            and sph.pr_num like #{prNumLike}
        </if>
        <if test="ouId != null">
            and sph.ou_id = #{ouId}
        </if>
        <if test="itemCategoryId != null">
            and spl.category_id = #{itemCategoryId}
        </if>
        <if test="purchaseAgentName != null and purchaseAgentName != ''">
            <bind name="purchaseAgentNameLike" value="'%'+purchaseAgentName+'%'"/>
            and hpa.purchase_agent_name like #{purchaseAgentNameLike}
        </if>
        <if test="rfxLineItemNum != null">
            and spl.line_num = #{rfxLineItemNum}
        </if>
        <if test="itemId != null">
            and spl.item_id = #{itemId}
        </if>

        order by spl.assigned_date desc

    </select>

    <select id="selectSimpleRfxHeaderById" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        srh.round_header_status,srh.round_quotation_rule,srh.round_quotation_end_date,srh.quotation_round_number,
        sp.subject_matter_rule
        from  ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join ssrc_round_header srh on h.rfx_header_id = srh.source_header_id and srh.source_from = 'RFX'
        LEFT JOIN ssrc_source_project sp on h.source_project_id = sp.source_project_id
        <where>
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
        </where>
    </select>
    <select id="selectSimpleRfxHeaderByIds" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        sst.result_approve_type,
        srh.round_header_status,srh.round_quotation_rule,srh.round_quotation_end_date,srh.quotation_round_number
        from  ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join ssrc_round_header srh on h.rfx_header_id = srh.source_header_id and srh.source_from = 'RFX'
        where h.rfx_header_id in
        <foreach collection="rfxHeaderIds" open="(" separator="," close=")" item="rfxHeaderId">
            #{rfxHeaderId}
        </foreach>
    </select>

    <select id="selectPhoneByOpenUserId" resultType="java.lang.String">
        select phone
        from iam_user
        where id=#{OpenUserId}
    </select>

    <select id="selectByQuotationHeaderId" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        SELECT
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>
        FROM
        ssrc_rfx_header h
        JOIN ssrc_source_template sst ON sst.template_id = h.template_id
        JOIN ssrc_rfx_quotation_header srqh ON srqh.rfx_header_id = h.rfx_header_id
        WHERE
        srqh.quotation_header_id = #{quotationHeaderId}
    </select>

    <select id="selectInvalidRfxHeaders" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        select
        t.*
        from (SELECT
        srh.rfx_header_id,
        srh.tenant_id,
        srh.rfx_num,
        srh.rfx_title,
        srh.object_version_number,
        srh.rfx_status,
        case when (
        SELECT
        count(1)
        FROM
        ssrc_rfx_quotation_header srqh
        WHERE
        srqh.rfx_header_id = srh.rfx_header_id
        AND srqh.tenant_id = srh.tenant_id
        AND (srqh.quotation_status = 'QUOTED' OR srqh.quotation_status = 'FINISHED' OR srqh.quotation_status = 'ROUND_QUOTATION')
        ) > 0 then 1 else 0 end as quotation_flag
        FROM
        ssrc_rfx_header srh
        WHERE
        ((srh.latest_quotation_end_date is null and srh.quotation_end_date &lt; #{now}) or
        srh.latest_quotation_end_date &lt; #{now})
        AND srh.rfx_status = 'IN_QUOTATION') t
        where t.quotation_flag = #{quotationFlag}
    </select>

    <select id="listBargainProcess" resultType="org.srm.source.rfx.api.dto.SupplierItemDTO">
        SELECT
        sm.uom_name,
        srli.item_code,
        srql.quotation_line_id,
        srqh.quotation_header_id,
        srli.item_name,
        srqh.supplier_company_id,
        srqh.supplier_company_name,
        sp.company_num supplier_company_num,
        srqh.entry_method,
        iu.login_name,
        iu.real_name,
        srqr.quotation_price,
        srqr.valid_net_price,
        srqr.record_id,
        srqr.quoted_date quotation_date,
        case when srqr.quotation_round_number is null then 1 else  srqr.quotation_round_number end as round_number,
        srqr.quotation_node,
        srqr.quotation_count,
        case when srqr.quotation_price is not null and srqr.quotation_quantity is not null
        then (srqr.quotation_price * srqr.quotation_quantity ) else 0 end as quotation_amount,
        case when srqr.quotation_price is not null and srqr.quotation_quantity is not null
        then (srqr.valid_net_price * srqr.quotation_quantity) else 0 end as quotation_net_amount,
        srh.rfx_header_id
        FROM
        ssrc_rfx_line_item srli
        JOIN ssrc_rfx_header srh ON srh.round_number = srli.current_round_number
        AND srh.rfx_header_id = srli.rfx_header_id
        left join ssrc_round_header round_header on round_header.source_header_id = srh.rfx_header_id and round_header.source_from = 'RFX'
        JOIN ssrc_rfx_quotation_header srqh ON srli.rfx_header_id = srqh.rfx_header_id
        AND srqh.round_number = srh.round_number
        JOIN ssrc_rfx_quotation_line srql ON srqh.quotation_header_id = srql.quotation_header_id
        AND srql.round_number = srli.current_round_number
        AND srql.quotation_line_status != 'ABANDONED'
        AND srql.rfx_line_item_id = srli.rfx_line_item_id
        join iam_user iu on iu.id = srql.created_by
        JOIN ssrc_rfx_quotation_record srqr ON srqr.quotation_line_id = srql.quotation_line_id
        LEFT JOIN hpfm_company sp ON sp.company_id = srqh.supplier_company_id
        LEFT JOIN smdm_uom sm on sm.uom_id = srli.uom_id
        WHERE
        srli.tenant_id = #{supplier.tenantId}
        <if test="supplier.rfxLineItemId != null and supplier.rfxLineItemId != ''">
            and srli.rfx_line_item_id = #{supplier.rfxLineItemId}
        </if>
        <if test="supplier.rfxHeaderId != null and supplier.rfxHeaderId != ''">
            and srli.rfx_header_id = #{supplier.rfxHeaderId}
        </if>
        <choose>
            <when test="supplier.orderType == 'itemName'">
                ORDER BY srli.item_name
            </when>
            <when test="supplier.orderType == 'supplierCompanyName'">
                ORDER BY srqh.supplier_company_name
            </when>
            <when test="supplier.orderType == 'quotationPrice'">
                ORDER BY srqr.quotation_price
            </when>
            <when test="supplier.orderType == 'quotationDate'">
                ORDER BY quotation_date
            </when>
        </choose>
        <if test="supplier.orderFlag == '1'.toString()">
            desc
        </if>
    </select>
    <select id="listAllRfxHeader" resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        <include refid="Prequal_Column_List"/>,
        ssrh.round_header_status,
        ssrh.round_quotation_end_date,
        ssrh.round_quotation_rule,
        ssrh.quotation_round_number,
        hpo.organization_name as pur_organization_name,
        iu.real_name as create_by_name,
        CONCAT( (select count(1) from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id and feedback_status = 'PARTICIPATED'),
        CONCAT( '/',
        (select count(1) from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id))) as quotation_feed_back,
        (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) as quoted_supplier_quantity
        from ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        join iam_user iu on iu.id = h.created_by
        join ssrc_rfx_member ssrm on h.rfx_header_id = ssrm.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header ssrh on ssrh.tenant_id = h.tenant_id and ssrh.source_header_id = h.rfx_header_id and ssrh.source_from = 'RFX'
        <where>
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
            <if test="purchaserId != null">
                and h.purchaser_id = #{purchaserId}
            </if>
            <if test="tenantId != null">
                and h.tenant_id = #{tenantId}
            </if>
            <if test="rfxNum != null and rfxNum != ''">
                <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
                and h.rfx_num like #{rfxNumLike}
            </if>
            <if test="rfxTitle != null and rfxTitle != ''">
                <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
                and h.rfx_title like #{rfxTitleLike}
            </if>
            <if test="sourceMethod != null and sourceMethod != ''">
                and h.source_method = #{sourceMethod}
            </if>
            <if test="sourceCategory != null and sourceCategory != ''">
                and h.source_category = #{sourceCategory}
            </if>
            <if test="rfxStatus != null and rfxStatus != ''">
                <choose>
                    <when test="rfxStatus == 'NOT_START'">
                        and (h.rfx_status = 'IN_QUOTATION' and h.quotation_start_date > #{now}  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                    </when>
                    <when test="rfxStatus == 'PENDING_PREQUAL'">
                        and (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_status = 'NO_APPROVED' and sph.prequal_end_date  &lt; #{now})
                    </when>
                    <when test="rfxStatus == 'IN_PREQUAL'">
                        and (h.rfx_status = 'IN_QUOTATION' and (sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date > #{now} and sph.prequal_status = 'NO_APPROVED')
                    </when>
                    <when test="rfxStatus == 'IN_QUOTATION'">
                        and (h.rfx_status = 'IN_QUOTATION' and #{now} > h.quotation_start_date and (h.quotation_end_date
                        > #{now} or h.quotation_end_date is null)  and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST') and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE'))
                    </when>
                    <when test="rfxStatus == 'LACK_QUOTED'">
                        and h.rfx_status = 'IN_QUOTATION' and h.quotation_type != 'OFFLINE' and h.quotation_end_date &lt; #{now} and h.sealed_quotation_flag = '0'
                        and (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &lt; h.min_quoted_supplier
                        and ((sst.qualification_type != 'PRE' and sst.qualification_type != 'PRE_POST') or (sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'APPROVED'))
                    </when>
                    <when test="rfxStatus == 'OPEN_BID_PENDING'">
                        and (h.rfx_status = 'IN_QUOTATION'
                        and (((sst.qualification_type = 'PRE' or sst.qualification_type = 'PRE_POST')and sph.prequal_status = 'APPROVED') or sst.qualification_type = 'NONE')
                        and h.quotation_end_date &lt; #{now} and sst.opener_flag = '1'
                        and h.sealed_quotation_flag = '1')
                    </when>
                    <when test="rfxStatus == 'PRETRIAL_PENDING'">
                        and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now})  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now})) and sst.pretrial_flag = '1' and h.pretrial_status = 'NO_TRIAL') or h.rfx_status = 'PRETRIAL_PENDING')
                    </when>
                    <when test="rfxStatus == 'CHECK_PENDING'">
                        and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and ((sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') ) )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and ((sst.pretrial_flag = '0' and h.sealed_quotation_flag = '0' and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') )))
                        and ((select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt;= h.min_quoted_supplier))
                        or h.rfx_status = 'CHECK_PENDING')
                    </when>
                    <when test="rfxStatus == 'SCORING'">
                        and ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and (sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'ONLINE') )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now}  and (sst.pretrial_flag = '0' and h.sealed_quotation_flag = '1' and sst.expert_score_type = 'ONLINE' )))
                        and ((select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.tenant_id = h.tenant_id and (srqh.quotation_status = 'QUOTED' or srqh.quotation_status = 'FINISHED')) &gt;= h.min_quoted_supplier))
                        or h.rfx_status = 'SCORING' or h.rfx_status = 'RFX_EVALUATION_PENDING' or h.rfx_status = 'PRE_EVALUATION_PENDING')
                        AND ((ssrh.round_header_status = 'CLOSED' AND sst.round_quotation_rule IN ('SCORE','AUTO_SCORE')) OR (sst.round_quotation_rule NOT IN ('SCORE','AUTO_SCORE')))
                    </when>
                    <when test="rfxStatus == 'BARGAINING'">
                        AND (h.bargain_status = 'BARGAINING_OFFLINE' OR h.bargain_status = 'BARGAINING_ONLINE')
                        AND h.bargain_end_date &gt; #{now}
                    </when>
                    <otherwise>
                        and h.rfx_status = #{rfxStatus}
                    </otherwise>
                </choose>
            </if>
            <if test="purOrganizationId != null">
                and h.pur_organization_id = #{purOrganizationId}
            </if>
            <if test="auctionDirection != null and auctionDirection != ''">
                and h.auction_direction = #{auctionDirection}
            </if>
            <if test="currencyCode != null and currencyCode != ''">
                and h.currency_code = #{currencyCode}
            </if>
            <if test="sealedQuotationFlag != null">
                and h.sealed_quotation_flag = #{sealedQuotationFlag}
            </if>
            <if test="allSelectFlag == null or allSelectFlag == 0">
                AND h.rfx_status != 'FINISHED'
                AND h.rfx_status != 'PAUSED'
                AND h.rfx_status != 'CLOSED'
                AND h.rfx_status != 'CANCELED'
            </if>
            <if test="createdBy != null">
                AND h.created_by = #{createdBy}
            </if>
            <if test="quotationType != null and quotationType != ''">
                AND h.quotation_type = #{quotationType}
            </if>
            <if test="creationDateFrom != null">
                AND h.creation_date >= #{creationDateFrom}
            </if>
            <if test="creationDateTo != null">
                AND h.creation_date &lt; #{creationDateTo}
            </if>
            <if test="quotationStartDateFrom != null">
                AND h.quotation_start_date >= #{quotationStartDateFrom}
            </if>
            <if test="quotationStartDateTo != null">
                AND h.quotation_start_date &lt; #{quotationStartDateTo}
            </if>
            <if test="quotationEndDateFrom != null">
                AND h.quotation_end_date >= #{quotationEndDateFrom}
            </if>
            <if test="quotationEndDateTo != null">
                AND h.quotation_end_date &lt; #{quotationEndDateTo}
            </if>
            <if test="ouId != null">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.ou_id = #{ouId})
            </if>
            <if test="taxIncludedFlag != null">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.tax_included_flag = #{taxIncludedFlag})
            </if>
            <if test="supplierCompanyName != null and supplierCompanyName != ''">
                <bind name="supplierCompanyNameLike" value="'%'+supplierCompanyName+'%'"/>
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_supplier ssls WHERE ssls.rfx_header_id = h.rfx_header_id AND
                ssls.supplier_company_name LIKE #{supplierCompanyNameLike})
            </if>
            <if test="prNum != null and prNum != ''">
                <bind name="prNumLike" value="'%'+prNum+'%'"/>
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.pr_num LIKE #{prNumLike})
            </if>
            <if test="prLineNum != null and prLineNum != ''">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.pr_line_num = #{prLineNum})
            </if>
            <if test="createdUnitId != null">
                AND h.created_unit_id = #{createdUnitId}
            </if>
            <if test="createdUnitName != null and createdUnitName != ''">
                <bind name="createdUnitNameLike" value="'%'+createdUnitName+'%'"/>
                AND h.created_unit_name LIKE  #{createdUnitNameLike}
            </if>
            <if test="queryParam != null and queryParam != ''">
                <bind name="queryParamLike" value="'%'+queryParam+'%'"/>
                and (
                h.rfx_num like #{queryParamLike} or
                h.rfx_title like #{queryParamLike} or
                exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_num like #{queryParamLike})  or
                h.rfx_status in (select lv.value from hpfm_lov_value lv join hpfm_lov_value_tl lvtl on lv.lov_value_id = lvtl.lov_value_id and lvtl.lang = #{lang} where lv.lov_code = 'SSRC.RFX_STATUS' and lv.meaning like #{queryParamLike})
                )
            </if>
        </where>
    </select>
    <select id="selectSentMessageRfx" resultType="org.srm.source.rfx.api.dto.SourceOpenPasswordDTO">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        select
        rm.rfx_member_id,
        rm.tenant_id,
        rm.user_id as open_user_id,
        hpiu.login_name,
        hpiu.real_name,
        hpiu.email,
        hpiu.phone,
        rm.password_flag,
        rm.opened_flag,
        rm.send_flag,
        rm.open_password,
        rm.object_version_number,
        rm.creation_date,
        rm.created_by,
        rm.last_updated_by,
        rm.last_update_date,
        srh.rfx_num,
        srh.rfx_title,
        srh.sealed_quotation_flag,
        srh.rfx_header_id,
        srh.quotation_end_date
        from
        ssrc_rfx_member rm
        join iam_user hpiu on rm.user_id = hpiu.id
        join ssrc_rfx_header srh on srh.rfx_header_id = rm.rfx_header_id and srh.tenant_id = rm.tenant_id
        where
        srh.rfx_status = 'IN_QUOTATION'
        and ( #{tenMinuteBefore} &gt;= srh.quotation_end_date and #{now} &lt;= srh.quotation_end_date)
        and rm.rfx_role = 'OPENED_BY'
        and rm.opened_flag != 1
        and rm.send_flag  != 1
    </select>

    <select id="selectSourceSendOrder" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name = "oneDaysAgo" value = "@org.apache.commons.lang3.time.DateUtils@truncate(@org.apache.commons.lang.time.DateUtils@addDays(new java.util.Date() , -1), @java.util.Calendar@SECOND)" />
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>
        from
        ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        where
        ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and h.quotation_end_date >= #{oneDaysAgo} and ((sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') ) )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now} and h.quotation_end_date >= #{oneDaysAgo} and ((sst.pretrial_flag = '0' and h.sealed_quotation_flag = '0' and sst.expert_score_type = 'NONE') or (sst.pretrial_flag = '1' and h.pretrial_status = 'SUBMITED') )))))
        or
        ((h.rfx_status = 'IN_QUOTATION' and ((sst.qualification_type = 'NONE' and h.quotation_end_date &lt; #{now} and h.quotation_end_date >= #{oneDaysAgo} and (sst.pretrial_flag = '0' and (h.sealed_quotation_flag = '0' or (sst.opener_flag = '0' and h.sealed_quotation_flag='1' )) and sst.expert_score_type = 'ONLINE') )  OR ((sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST') AND sph.prequal_status = 'APPROVED' and h.quotation_end_date &lt; #{now} and h.quotation_end_date >= #{oneDaysAgo} and (sst.pretrial_flag = '0' and h.sealed_quotation_flag = '1' and sst.expert_score_type = 'ONLINE' ))))
        or h.rfx_status = 'RFX_EVALUATION_PENDING' or h.rfx_status = 'PRE_EVALUATION_PENDING')

    </select>

    <select id="selectQuotationStartHandler" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name = "minuteAgo" value = "@org.apache.commons.lang3.time.DateUtils@truncate(@org.apache.commons.lang.time.DateUtils@addMinutes(new java.util.Date() , 5), @java.util.Calendar@SECOND)" />
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        sst.qualification_type,
        sph.prequal_header_id
        FROM
        ssrc_rfx_header h
        JOIN ssrc_source_template sst ON sst.template_id = h.template_id
        LEFT JOIN ssrc_prequal_header sph ON sph.rfx_header_id = h.rfx_header_id
        AND sph.tenant_id = h.tenant_id
        AND sph.prequal_category = 'RFX'
        WHERE
        (
        (
        h.rfx_status = 'IN_QUOTATION'
        AND (
        (
        sst.qualification_type = 'NONE'
        AND h.quotation_start_date > #{now} AND h.quotation_start_date &lt;= #{minuteAgo}
        AND (
        (
        sst.pretrial_flag = '0'
        AND ( h.sealed_quotation_flag = '0' OR ( sst.opener_flag = '0' AND h.sealed_quotation_flag = '1' ) )
        AND sst.expert_score_type = 'NONE'
        )
        OR ( sst.pretrial_flag = '1' AND h.pretrial_status = 'SUBMITED' )
        )
        )
        OR (
        ( sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST' )
        AND sph.prequal_status = 'APPROVED'
        AND h.quotation_start_date > #{now} AND h.quotation_start_date &lt;= #{minuteAgo}
        AND (
        ( sst.pretrial_flag = '0' AND h.sealed_quotation_flag = '0' AND sst.expert_score_type = 'NONE' )
        OR ( sst.pretrial_flag = '1' AND h.pretrial_status = 'SUBMITED' )
        )
        )
        )
        )
        )
        OR (
        (
        h.rfx_status = 'IN_QUOTATION'
        AND (
        (
        sst.qualification_type = 'NONE'
        AND h.quotation_start_date > #{now} AND h.quotation_start_date &lt;= #{minuteAgo}
        AND (
        sst.pretrial_flag = '0'
        AND ( h.sealed_quotation_flag = '0' OR ( sst.opener_flag = '0' AND h.sealed_quotation_flag = '1' ) )
        AND sst.expert_score_type = 'ONLINE'
        )
        )
        OR (
        ( sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST' )
        AND sph.prequal_status = 'APPROVED'
        AND h.quotation_start_date > #{now} AND h.quotation_start_date &lt;= #{minuteAgo}
        AND ( sst.pretrial_flag = '0' AND h.sealed_quotation_flag = '1' AND sst.expert_score_type = 'ONLINE' )
        )
        )
        )
        );
    </select>

    <select id="selectSignInHandler" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name = "minuteAgo" value = "@org.apache.commons.lang3.time.DateUtils@truncate(@org.apache.commons.lang.time.DateUtils@addMinutes(new java.util.Date() , 5), @java.util.Calendar@SECOND)" />
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        sst.qualification_type,
        sph.prequal_header_id
        FROM
        ssrc_rfx_header h
        JOIN ssrc_source_template sst ON sst.template_id = h.template_id
        LEFT JOIN ssrc_prequal_header sph ON sph.rfx_header_id = h.rfx_header_id
        AND sph.tenant_id = h.tenant_id
        AND sph.prequal_category = 'RFX'
        WHERE
        h.rfx_status = 'IN_QUOTATION'
        AND (
        (
        sst.qualification_type = 'NONE'
        AND h.estimated_start_time > #{now}
        AND h.estimated_start_time &lt;= #{minuteAgo}
        )
        OR (
        ( sst.qualification_type = 'PRE' OR sst.qualification_type = 'PRE_POST' )
        AND sph.prequal_status = 'APPROVED'
        AND h.estimated_start_time > #{now}
        AND h.estimated_start_time &lt;= #{minuteAgo}
        )
        )
    </select>

    <select id="selectQuotationEndTimeComingRfx" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="calNow" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(@java.lang.System@currentTimeMillis() + 60 * 60 * 1000), @java.util.Calendar@SECOND)"/>
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        SELECT
        srh.*,
        (select count(1) from
        ssrc_rfx_line_supplier srls
        JOIN ssrc_rfx_quotation_header srqh ON srls.rfx_header_id = srqh.rfx_header_id AND srqh.supplier_company_id = srls.supplier_company_id
        and srqh.tenant_id = srls.tenant_id and srqh.supplier_tenant_id = srls.supplier_tenant_id
        and srqh.quotation_status = 'QUOTED'
        where  srls.rfx_header_id = srh.rfx_header_id  AND srls.tenant_id = srls.tenant_id AND srqh.round_number = srh.round_number) as quotation_quantity
        FROM
        ssrc_rfx_header srh

        where
        srh.rfx_status = 'IN_QUOTATION'
        AND srh.quotation_type!='OFFLINE'
        <choose>
            <when test="null != sendMethodFlag and sendMethodFlag == 1">
                and ( #{comingDate} &gt; srh.quotation_end_date  and #{calNow} &lt;= srh.quotation_end_date)
                and NOT EXISTS (select null from ssrc_message_mark smm
                where smm.source_id  = srh.rfx_header_id
                and smm.source_from = 'RFX'
                and smm.message_code = 'SSRC.RFX_QUOTATION_END_BUYER_DAY'
                and smm.sent_flag = 1
                )
            </when>
            <otherwise>
                and ( #{comingDate} &gt; srh.quotation_end_date  and #{now} &lt;= srh.quotation_end_date)
                and NOT EXISTS (select null from ssrc_message_mark smm
                where smm.source_id  = srh.rfx_header_id
                and smm.source_from = 'RFX'
                and smm.message_code = 'SSRC.RFX_QUOTATION_END_BUYER_HOUR'
                and smm.sent_flag = 1
                )
            </otherwise>
        </choose>
    </select>
    <select id="selectQuotationEndTimePendindSuppliers" resultType="org.srm.source.rfx.api.dto.RfxQuotationHeaderDTO">
        <bind name="calNow" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(@java.lang.System@currentTimeMillis() + 60 * 60 * 1000), @java.util.Calendar@SECOND)"/>
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        SELECT
        srls.supplier_company_id as supplier_company_id,
        srls.supplier_company_name as supplier_company_name,
        srls.supplier_tenant_id,
        srh.*,srls.rfx_line_supplier_id
        FROM
        ssrc_rfx_header srh
        JOIN ssrc_rfx_line_supplier srls ON srh.rfx_header_id = srls.rfx_header_id AND srh.tenant_id = srls.tenant_id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON srh.rfx_header_id = srqh.rfx_header_id AND srqh.supplier_company_id = srls.supplier_company_id AND srqh.round_number = srh.round_number
        and srqh.tenant_id = srh.tenant_id and srqh.supplier_tenant_id = srls.supplier_tenant_id
        and srqh.quotation_status = 'NEW'
        WHERE
        EXISTS ( SELECT sa.rfx_line_supplier_id FROM ssrc_rfx_item_sup_assign sa WHERE sa.rfx_header_id = srh.rfx_header_id AND sa.rfx_line_supplier_id = srls.rfx_line_supplier_id)
        and   srh.rfx_status = 'IN_QUOTATION'
        AND srh.quotation_type!='OFFLINE'
        AND ( srls.feedback_status != 'ABANDONED' OR srls.feedback_status IS NULL )
        AND ((srqh.quotation_status = 'NEW' and srh.source_method != 'INVITE') or srh.source_method = 'INVITE' )
        <choose>
            <when test="null != sendMethodFlag and sendMethodFlag == 1">
                and ( #{comingDate} &gt; srh.quotation_end_date  and #{calNow} &lt;= srh.quotation_end_date)
                and NOT EXISTS (select null from ssrc_message_mark smm
                where smm.source_id  = srh.rfx_header_id
                and smm.source_from = 'RFX'
                and smm.message_code = 'SSRC.RFX_QUO_END_SUPPLIER_DAY'
                and smm.sent_flag = 1
                )
            </when>
            <otherwise>
                and ( #{comingDate} &gt; srh.quotation_end_date  and #{now} &lt;= srh.quotation_end_date)
                and NOT EXISTS (select null from ssrc_message_mark smm
                where smm.source_id  = srh.rfx_header_id
                and smm.source_from = 'RFX'
                and smm.message_code = 'SSRC.RFX_QUO_END_SUPPLIER_HOUR'
                and smm.sent_flag = 1
                )
            </otherwise>
        </choose>
    </select>
    <select id="selectMinQuotationSupplierRfxHeader" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        SELECT srh.rfx_header_id,
        srh.tenant_id,
        srh.rfx_num,
        srh.rfx_title,
        srh.company_id,
        srh.company_name,
        srh.min_quoted_supplier,
        srh.object_version_number,
        srh.created_by
        FROM ssrc_rfx_header srh
        WHERE srh.quotation_end_date &lt; #{now}
        AND srh.rfx_status = 'IN_QUOTATION'
        AND srh.quotation_type != 'OFFLINE'
        and NOT EXISTS (select null from ssrc_message_mark smm
        where smm.source_id  = srh.rfx_header_id
        and smm.source_from = 'RFX'
        and smm.message_code = 'SSRC.RFX_LACK_QUOTED'
        and smm.sent_flag = 1 )
        AND (
        SELECT count(1)
        FROM ssrc_rfx_quotation_header srqh
        WHERE srqh.rfx_header_id = srh.rfx_header_id
        AND srqh.tenant_id = srh.tenant_id
        AND (srqh.quotation_status = 'QUOTED' OR srqh.quotation_status = 'FINISHED')
        ) &lt; srh.min_quoted_supplier
    </select>
    <select id="querySummary" resultType="org.srm.source.share.domain.entity.SupplierSummary">
        SELECT
        srh.rfx_header_id AS header_id,
        srqh.quotation_header_id,
        srh.tenant_id,
        srh.company_id,
        srqh.supplier_tenant_id,
        srqh.supplier_company_id,
        hc.company_num AS supplier_company_num,
        ses.supplier_id,
        ses.supplier_num,
        srh.released_date,

        srql.valid_quotation_price,
        srql.allotted_quantity,
        srql.quotation_line_id,
        srql.suggested_flag
        FROM ssrc_rfx_header srh
        JOIN ssrc_rfx_quotation_header srqh ON srh.rfx_header_id = srqh.rfx_header_id
        AND srh.round_number = srqh.round_number
        AND srqh.quotation_status IN ('QUOTED','FINISHED')
        JOIN hpfm_company hc ON srqh.supplier_company_id = hc.company_id
        LEFT JOIN sslm_external_supplier ses ON hc.company_id = ses.link_id
        AND srh.tenant_id = ses.tenant_id
        LEFT JOIN ssrc_rfx_quotation_line srql ON srqh.quotation_header_id = srql.quotation_header_id
        AND srql.quotation_line_status NOT IN ('NEW', 'ABANDONED')
        WHERE 1 = 1
        <if test="flag != 1">
            AND srh.tenant_id = #{organizationId}
        </if>
        AND srh.released_date IS NOT NULL
        AND srh.rfx_status = 'FINISHED';
    </select>

    <select id="selectCheck" resultType="org.hzero.boot.message.entity.Receiver">
        SELECT
        iu.id user_id,
        iu.organization_id target_user_tenantId,
        iu.login_name,
        iu.phone,
        iu.email
        FROM iam_user iu
        <where>
            iu.id = #{userId}
            AND iu.organization_id = #{organizationId}
        </where>
    </select>
    <resultMap id="progressMap" type="org.srm.source.rfx.api.dto.ExpertScoreProgressDTO">
        <result column="rfx_header_id" property="rfxHeaderId" jdbcType="DECIMAL"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="rfx_num" property="rfxNum" jdbcType="VARCHAR"/>
        <result column="rfx_status" property="rfxStatus" jdbcType="VARCHAR"/>
        <result column="rfx_title" property="rfxTitle" jdbcType="VARCHAR"/>
        <result column="source_category" property="sourceCategory" jdbcType="VARCHAR"/>
        <result column="source_method" property="sourceMethod" jdbcType="VARCHAR"/>
        <result column="company_id" property="companyId" jdbcType="DECIMAL"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="source_category" property="sourceCategory" jdbcType="VARCHAR"/>
        <result column="expert_score_type" property="expertScoreType" jdbcType="VARCHAR"/>
        <result column="open_bid_order" property="openBidOrder" jdbcType="VARCHAR"/>
        <result column="bid_rule_type" property="bidRuleType" jdbcType="VARCHAR"/>
        <result column="source_method" property="sourceMethod" jdbcType="VARCHAR"/>
        <result column="current_sequence_num" property="currentSequenceNum" jdbcType="DECIMAL"/>
        <result column="round_number" property="roundNumber" jdbcType="DECIMAL"/>
        <collection property="quotationHeaderIds" ofType="java.lang.Long">
            <result column="quotation_header_id"/>
        </collection>
        <collection property="supplierList" ofType="org.srm.source.rfx.api.dto.ExpertScoreSupplierDTO">
            <result column="quotation_header_id" property="quotationHeaderId" jdbcType="DECIMAL"/>
            <result column="supplier_tenant_id" property="supplierTenantId" jdbcType="DECIMAL"/>
            <result column="supplier_company_id" property="supplierCompanyId" jdbcType="DECIMAL"/>
            <result column="supplier_company_name" property="supplierCompanyName" jdbcType="VARCHAR"/>
            <result column="summary_score" property="summaryScore" jdbcType="VARCHAR"/>
            <result column="summary_score_meaning" property="summaryScoreMeaning" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <select id="selectQuotedSupplierByRfxHeaderId" resultMap="progressMap">
        SELECT
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        srqh.quotation_header_id,
        srqh.supplier_tenant_id,
        srqh.supplier_company_id,
        srqh.supplier_company_name,
        (case when (h.rfx_status = 'IN_QUOTATION' or h.rfx_status = 'SCORING' or h.rfx_status = 'RFX_EVALUATION_PENDING') then '-' else null end) AS summary_score_meaning
        FROM
        ssrc_rfx_header h
        JOIN ssrc_source_template sst ON sst.template_id = h.template_id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON srqh.rfx_header_id = h.rfx_header_id
        AND srqh.round_number = h.round_number AND srqh.quotation_status != 'NEW'
        WHERE
        h.rfx_header_id = #{rfxHeaderId}
        AND h.tenant_id = #{tenantId}
    </select>

    <select id="totalRfxHeaderCountByIssue" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT
            count( 1 )
        FROM
            ssrc_rfx_header rh
        WHERE
            rh.tenant_id = #{tenantId,jdbcType=DECIMAL}
          AND EXISTS (
                SELECT
                    1
                FROM
                    ssrc_issue_header ih
                        JOIN ssrc_issue_line il ON ih.issue_header_id = il.issue_header_id
                WHERE
                    ih.source_id = rh.rfx_header_id
                  and ih.tenant_id = rh.tenant_id
                  AND il.issue_line_status IN ( 'SUBMITTED', 'CLARIFYING' )
            )
    </select>
    <select id="selectPretrialCount" resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        select
        <include refid="Base_Column_List"/>,
        sst.qualification_type,
        sst.opener_flag,
        sst.expert_score_type,
        sph.prequal_status,
        sst.pretrial_flag,
        sph.prequal_end_date
        from
        ssrc_rfx_header h
        join ssrc_source_template sst on h.template_id = sst.template_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id
        left join ssrc_message_mark smm on smm.source_id = h.rfx_header_id and smm.sent_flag !=1
        and smm.message_code = 'SSRC.RFX_PRETRIAL'
        where
        sst.pretrial_flag = 1
        and #{now} > h.latest_quotation_end_date
        and h.rfx_status = 'IN_QUOTATION'
    </select>
    <select id="selectRfxHeaderForProcessApproveDTO" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        SELECT
            srh.tenant_id,
            srh.rfx_header_id,
            srh.rfx_num,
            srh.rfx_title,
            srh.unit_id,
            srh.created_by,
            sst.template_num,
            hc.company_num,
            hu.unit_code,
            hu.unit_name,
            srh.created_unit_id,
            hu1.unit_code as created_unit_code,
            hu1.unit_name as created_unit_name
        FROM ssrc_rfx_header srh
                 join ssrc_source_template sst on srh.template_id = sst.template_id
                 JOIN hpfm_company hc ON srh.tenant_id = hc.tenant_id and srh.company_id = hc.company_id
                 LEFT JOIN hpfm_unit hu ON srh.unit_id = hu.unit_id
                 LEFT JOIN hpfm_unit hu1 ON srh.created_unit_id = hu1.unit_id
        WHERE srh.rfx_header_id = #{rfxHeaderId}
    </select>
    <select id="selectAllQuotationByRfxHeader" resultType="org.srm.source.rfx.domain.entity.RfxQuotationLine">
        SELECT
        srql.*,
        srli.rfx_quantity,
        srqh.exchange_rate,
        srql.valid_net_price * srqh.exchange_rate as base_net_price,
        srql.valid_quotation_price * srqh.exchange_rate AS base_quotation_price
        FROM
        ssrc_rfx_quotation_line srql
        JOIN ssrc_rfx_quotation_header srqh ON srql.quotation_header_id = srqh.quotation_header_id
        JOIN ssrc_rfx_header srh ON srqh.rfx_header_id = srh.rfx_header_id AND srqh.round_number = srh.round_number
        JOIN ssrc_rfx_line_item srli ON srql.rfx_line_item_id = srli.rfx_line_item_id and srh.rfx_header_id = srli.rfx_header_id
        WHERE
        srh.tenant_id = #{tenantId}
        AND srh.rfx_header_id = #{rfxHeaderId}
        AND srql.quotation_line_status IN ( 'SUBMITTED', 'BARGAINED', 'ROUND_QUOTATION' )
        <if test = "suggestedFlag != null">
            AND srql.suggested_flag = #{suggestedFlag}
        </if>
    </select>
    <select id="checkExpertIndicAssign" resultType="org.srm.source.share.domain.entity.EvaluateExpert">
        select
            iu.real_name as expert_name,
            (select count(*) from ssrc_evaluate_indic_assign seia
                                      join ssrc_evaluate_indic sei on sei.evaluate_indic_id = seia.evaluate_indic_id
             where see.evaluate_expert_id  = seia.evaluate_expert_id
               and see.source_header_id = seia.source_header_id
               and seia.assign_flag =1
               and sei.team  != 'INITIAL_REVIEW'
            ) as assign_count
        from
            ssrc_evaluate_expert see
                join iam_user iu on iu.id = see.expert_user_id
        where see.source_header_id =#{rfxHeaderId}  and see.tenant_id =#{tenantId}
    </select>
    <select id="selectRfxForAutoScore" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        SELECT
        h.rfx_header_id,
        h.tenant_id,
        h.object_version_number
        FROM ssrc_rfx_header h
        JOIN iam_user iu ON iu.id = h.created_by
        JOIN ssrc_source_template sst ON sst.template_id = h.template_id
        JOIN ssrc_rfx_member ssrm ON h.rfx_header_id = ssrm.rfx_header_id AND ssrm.rfx_role = 'RFX_BY'
        LEFT JOIN hpfm_purchase_organization hpo ON hpo.purchase_org_id = h.pur_organization_id
        LEFT JOIN ssrc_prequal_header sph ON sph.rfx_header_id = h.rfx_header_id AND sph.tenant_id = h.tenant_id AND sph.prequal_category = 'RFX'
        WHERE 1=1
        and h.score_process_flag =0
        and sst.expert_score_type = 'ONLINE'
        and ((SELECT count(1)
        FROM ssrc_rfx_quotation_header srqh
        WHERE srqh.rfx_header_id = h.rfx_header_id
        AND srqh.tenant_id = h.tenant_id
        AND (srqh.quotation_status = 'QUOTED' OR srqh.quotation_status = 'FINISHED')) >= h.min_quoted_supplier)
        and h.quotation_end_date &lt; #{now}
        and exists(
            select 1
            from ssrc_evaluate_indic sei
            where 1=1
            and sei.tenant_id = h.tenant_id
            and sei.source_header_id = h.rfx_header_id
            and sei.source_from = 'RFX'
            and sei.calculate_type = 'AUTO'
            and sei.score_type = 'PRICE'
        )
        AND NOT EXISTS(
        select 1 from ssrc_rfx_member srm where h.rfx_header_id = srm.rfx_header_id
        and srm.password_flag =1
        )
    </select>
    <select id="listMonitorSupplierOfInvited" resultType="org.srm.source.rfx.api.dto.RfxMonitorSupplierDTO">
        SELECT
            hc.company_num as supplier_company_num,
            srls.supplier_company_id,
            srls.supplier_company_name,
            srls.contact_name,
            srls.contact_mobilephone,
            srls.contact_mail,
            srls.feedback_status,
            case when srqh.sign_in_flag is null then 0 else srqh.sign_in_flag end as sign_in_flag,
            srqh.sign_in_flag,
            srqh.quotation_header_id
        FROM
            ssrc_rfx_line_supplier srls
                LEFT JOIN hpfm_company hc ON srls.supplier_company_id = hc.company_id
                LEFT JOIN ssrc_rfx_header srh ON srls.rfx_header_id = srh.rfx_header_id
                LEFT JOIN ssrc_rfx_quotation_header srqh ON srqh.rfx_header_id = srh.rfx_header_id
                AND srh.round_number = srqh.round_number
                AND srqh.supplier_company_id = srls.supplier_company_id
                AND srqh.supplier_tenant_id = srls.supplier_tenant_id
        WHERE
            srls.rfx_header_id = #{rfxHeaderId}
          AND srls.tenant_id = #{tenantId}
    </select>

    <select id="listMonitorSupplierOfParticipated" resultType="org.srm.source.rfx.api.dto.RfxMonitorSupplierDTO">
        SELECT
            hc.company_num as supplier_company_num,
            srls.supplier_company_id,
            srqh.supplier_company_name,
            srqh.rfx_line_supplier_id,
            srqh.supplier_company_id,
            srls.contact_name,
            srls.contact_mobilephone,
            srls.contact_mail,
            srls.feedback_status,
            case when srqh.sign_in_flag is null then 0 else srqh.sign_in_flag end as sign_in_flag,
            srqh.quotation_header_id
        FROM
            ssrc_rfx_quotation_header srqh
                left join hpfm_company hc on srqh.supplier_company_id = hc.company_id
                join ssrc_rfx_header srh on srqh.rfx_header_id = srh.rfx_header_id and srh.round_number = srqh.round_number
                left join ssrc_rfx_line_supplier srls on srqh.rfx_header_id = srls.rfx_header_id and srqh.supplier_company_id = srls.supplier_company_id
        where srqh.rfx_header_id = #{rfxHeaderId}
          and srqh.tenant_id = #{tenantId}
    </select>

    <resultMap id="rfxListResultMap" type="org.srm.source.rfx.api.dto.SourceHeaderDTO">
        <!-- 询价单基础字段 -->
        <result column="rfx_header_id" property="rfxHeaderId" jdbcType="DECIMAL"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="budget_amount" property="budgetAmount" jdbcType="DECIMAL"/>
        <result column="tax_included_flag" property="taxIncludedFlag" jdbcType="DECIMAL"/>
        <result column="tax_id" property="taxId" jdbcType="DECIMAL"/>
        <result column="tax_rate" property="taxRate" jdbcType="DECIMAL"/>
        <result column="currency_code" property="currencyCode" jdbcType="VARCHAR"/>
        <result column="exchange_rate_id" property="exchangeRateId" jdbcType="DECIMAL"/>
        <result column="exchange_rate" property="exchangeRate" jdbcType="DECIMAL"/>
        <result column="rfx_remark" property="rfxRemark" jdbcType="VARCHAR"/>
        <result column="open_rule" property="openRule" jdbcType="VARCHAR"/>
        <result column="auction_ranking" property="auctionRanking" jdbcType="VARCHAR"/>
        <result column="source_type" property="sourceType" jdbcType="VARCHAR"/>
        <result column="price_category" property="priceCategory" jdbcType="VARCHAR"/>
        <result column="payment_type_id" property="paymentTypeId" jdbcType="DECIMAL"/>
        <result column="payment_term_id" property="paymentTermId" jdbcType="DECIMAL"/>
        <result column="round_number" property="roundNumber" jdbcType="DECIMAL"/>
        <result column="version_number" property="versionNumber" jdbcType="DECIMAL"/>
        <result column="quotation_order_type" property="quotationOrderType" jdbcType="VARCHAR"/>
        <result column="quotation_running_duration" property="quotationRunningDuration" jdbcType="DECIMAL"/>
        <result column="quotation_interval" property="quotationInterval" jdbcType="DECIMAL"/>
        <result column="auction_rule" property="auctionRule" jdbcType="VARCHAR"/>
        <result column="auto_defer_flag" property="autoDeferFlag" jdbcType="DECIMAL"/>
        <result column="auto_defer_duration" property="autoDeferDuration" jdbcType="DECIMAL"/>
        <result column="released_date" property="releasedDate" jdbcType="DATE"/>
        <result column="released_by" property="releasedBy" jdbcType="DECIMAL"/>
        <result column="terminated_date" property="terminatedDate" jdbcType="DATE"/>
        <result column="terminated_by" property="terminatedBy" jdbcType="DECIMAL"/>
        <result column="terminated_remark" property="terminatedRemark" jdbcType="VARCHAR"/>
        <result column="approved_date" property="approvedDate" jdbcType="DATE"/>
        <result column="approved_by" property="approvedBy" jdbcType="DECIMAL"/>
        <result column="approved_remark" property="approvedRemark" jdbcType="VARCHAR"/>
        <result column="time_adjusted_date" property="timeAdjustedDate" jdbcType="DATE"/>
        <result column="time_adjusted_by" property="timeAdjustedBy" jdbcType="DECIMAL"/>
        <result column="time_adjusted_remark" property="timeAdjustedRemark" jdbcType="VARCHAR"/>
        <result column="closed_flag" property="closedFlag" jdbcType="DECIMAL"/>
        <result column="source_from" property="sourceFrom" jdbcType="VARCHAR"/>
        <result column="pretrail_remark" property="pretrailRemark" jdbcType="VARCHAR"/>
        <result column="tech_attachment_uuid" property="techAttachmentUuid" jdbcType="VARCHAR"/>
        <result column="business_attachment_uuid" property="businessAttachmentUuid" jdbcType="VARCHAR"/>
        <result column="object_version_number" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="last_update_date" property="lastUpdateDate" jdbcType="DATE"/>
        <result column="quotation_scope" property="quotationScope" jdbcType="VARCHAR"/>

        <!-- 寻源模板基础字段 -->
        <result column="template_id" property="templateId" jdbcType="DECIMAL"/>
        <result column="template_num" property="templateNum" jdbcType="VARCHAR"/>
        <result column="template_name" property="templateName" jdbcType="VARCHAR"/>
        <result column="source_announcement_flag" property="sourceAnnouncementFlag" jdbcType="DECIMAL"/>
        <result column="bid_announcement_flag" property="bidAnnouncementFlag" jdbcType="DECIMAL"/>
        <result column="pretrial_flag" property="pretrialFlag" jdbcType="DECIMAL"/>
        <result column="release_approve_type" property="releaseApproveType" jdbcType="VARCHAR"/>
        <result column="result_approve_type" property="resultApproveType" jdbcType="VARCHAR"/>
        <result column="bid_rule_type" property="bidRuleType" jdbcType="VARCHAR"/>
        <result column="qualification_type" property="qualificationType" jdbcType="VARCHAR"/>
        <result column="expert_score_type" property="expertScoreType" jdbcType="VARCHAR"/>
        <result column="open_bid_order" property="openBidOrder" jdbcType="VARCHAR"/>
        <result column="subject_matter_rule" property="subjectMatterRule" jdbcType="VARCHAR"/>
        <result column="direct_cross_round_flag" property="directCrossRoundFlag" jdbcType="DECIMAL"/>
        <result column="opener_flag" property="openerFlag" jdbcType="DECIMAL"/>
        <result column="valid_date_input_type" property="validDateInputType" jdbcType="VARCHAR"/>
        <result column="source_stage" property="sourceStage" jdbcType="VARCHAR"/>
        <result column="budget_control_rule" property="budgetControlRule" jdbcType="VARCHAR"/>
        <result column="tax_change_flag" property="taxChangeFlag" jdbcType="DECIMAL"/>

        <association property="headerStatus" javaType="org.srm.source.rfx.api.dto.HeaderStatusDTO">
            <result column="rfx_status" property="rfxStatus" jdbcType="VARCHAR"/>
        </association>
        <association property="headerDetail" javaType="org.srm.source.rfx.api.dto.HeaderDetailDTO">
            <result column="rfx_num" property="rfxNum" jdbcType="VARCHAR"/>
            <result column="rfx_title" property="rfxTitle" jdbcType="VARCHAR"/>
            <result column="template_name" property="templateName" jdbcType="VARCHAR"/>
            <result column="source_category" property="sourceCategory" jdbcType="VARCHAR"/>
            <result column="source_method" property="sourceMethod" jdbcType="VARCHAR"/>
        </association>
        <association property="headerQuotationDate" javaType="org.srm.source.rfx.api.dto.HeaderQuotationDateDTO">
            <result column="quotation_start_date" property="quotationStartDate" jdbcType="DATE"/>
            <result column="quotation_end_date" property="quotationEndDate" jdbcType="DATE"/>
            <result column="prequal_end_date" property="prequalEndDate" jdbcType="DATE"/>
        </association>
        <association property="headerOrganizationInfo" javaType="org.srm.source.rfx.api.dto.HeaderOrganizationInfoDTO">
            <result column="company_id" property="companyId" jdbcType="DECIMAL"/>
            <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
            <result column="pur_organization_id" property="purOrganizationId" jdbcType="DECIMAL"/>
            <result column="pur_organization_name" property="purOrganizationName" jdbcType="VARCHAR"/>
        </association>
        <association property="headerQuotationRule" javaType="org.srm.source.rfx.api.dto.HeaderQuotationRuleDTO">
            <result column="quotation_type" property="quotationType" jdbcType="VARCHAR"/>
            <result column="auction_direction" property="auctionDirection" jdbcType="VARCHAR"/>
            <result column="currency_code" property="currencyCode" jdbcType="VARCHAR"/>
            <result column="sealed_quotation_flag" property="sealedQuotationFlag" jdbcType="DECIMAL"/>
        </association>
        <association property="headerCreationInfo" javaType="org.srm.source.rfx.api.dto.HeaderCreationInfoDTO">
            <result column="create_by_name" property="createdByName" jdbcType="VARCHAR"/>
            <result column="created_by" property="createdBy" jdbcType="DECIMAL"/>
            <result column="creation_date" property="creationDate" jdbcType="DATE"/>
            <result column="created_unit_name" property="createdUnitName" jdbcType="VARCHAR"/>
        </association>
    </resultMap>



    <!--> 资格预审中条件筛选 <-->
    <!--> 模板开启预审, 同时预审未截止 <-->
    <sql id="status_in_prequal">
        (sph.prequal_header_id is not null and sph.prequal_end_date is not null and sph.prequal_end_date &gt; #{now})
    </sql>

    <!--> 待预审审批条件筛选 <-->
    <!--> 模板开启预审, 同时预审已截止，预审头状态为 NO_APPROVED <-->
    <sql id="status_pending_prequal">
        (sph.prequal_header_id is not null and sph.prequal_end_date &lt; #{now} and sph.prequal_status = 'NO_APPROVED')
    </sql>

    <!--> 未开始条件筛选 <-->
    <sql id="status_not_start">
        ((h.quotation_start_date IS NOT NULL AND h.quotation_start_date > #{now}) OR (h.quotation_start_date IS NULL AND h.source_category = 'RFA'))
    </sql>

    <!--> 报价中条件筛选 <-->
    <!--> 状态为in_quotation, 已开始,未结束 <-->
    <sql id="status_in_quotation">
        (h.quotation_start_date &lt; #{now} and (h.quotation_end_date IS NULL OR h.quotation_end_date &gt; #{now} ))
    </sql>

    <!--> 报价响应不足条件筛选 <-->
    <!--> 状态为in_quotation, 不为线下, 不为密封, 已截止, 本轮次的报价供应商大于最小响应供应商<-->
    <sql id="status_lack_quoted">
        (h.quotation_type != 'OFFLINE' and h.latest_quotation_end_date &lt; #{now} and h.sealed_quotation_flag = '0'
            and (select count(1) from ssrc_rfx_quotation_header srqh where srqh.rfx_header_id = h.rfx_header_id and srqh.round_number = h.round_number and srqh.quotation_status in ('QUOTED','FINISHED','ROUND_QUOTATION')) &lt; h.min_quoted_supplier)
    </sql>

    <!--> 待开标条件筛选 <-->
    <!--> 状态为in_quotation, 已截止，有开标人，非报价不足<-->
    <sql id="status_open_bid_pending">
        (h.latest_quotation_end_date &lt; #{now} and sst.opener_flag = '1' and h.sealed_quotation_flag = '1')
    </sql>
    <!--> 专家评分条件筛选 <-->
    <!--> 状态为in_quotation, 模板配置线上评分，已截止，非报价不足，<-->
    <sql id="status_scoring">
        (h.latest_quotation_end_date &lt; #{now} and h.rfx_status in ('SCORING','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','RFX_INITIAL_REVIEW_PENDING','INITIAL_REVIEW_SCORING') OR (sst.expert_score_type = 'ONLINE' AND sst.pretrial_flag = 0))
    </sql>
    <!--> 议价条件筛选 <-->
    <!--> 状态为in_quotation, 议价未截止, 议价状态为ing<-->
    <sql id="status_bargain">
        (h.bargain_end_date &gt; #{now} and h.bargain_status in ('BARGAIN_OFFLINE','BARGAINING_ONLINE'))
    </sql>
    <!--> 多轮报价条件筛选 <-->
    <!--> 状态为in_quotation, 模板配置多轮, 头状态, 已截止<-->
    <sql id="status_round_quotation">
        (srh.round_header_status = 'ROUND_CHECKING' and srh.round_quotation_end_date &gt; #{now}) or srh.round_header_status = 'ROUND_SCORING'
    </sql>
    <!-->待初审条件筛选 <-->
    <!--> 状态为in_quotation, 模板配置线上评分，已截止，非报价不足，<-->
    <sql id="status_pretrial_pending">
            (h.latest_quotation_end_date &lt; #{now} and sst.pretrial_flag = 1 )
    </sql>
    <!--> 待核价条件筛选 <-->
    <!--> 状态为in_quotation, 模板配置线上评分，已截止，非报价不足，<-->
    <sql id="status_check_pending">
        (h.latest_quotation_end_date &lt; #{now} and sst.pretrial_flag = 0 AND sst.expert_score_type != 'ONLINE')
    </sql>

    <sql id="rfx_status_case_when">
        CASE
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_in_prequal"/> THEN 'IN_PREQUAL'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_pending_prequal"/> THEN 'PENDING_PREQUAL'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_not_start"/> THEN 'NOT_START'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_in_quotation"/> THEN 'IN_QUOTATION'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_lack_quoted"/> THEN 'LACK_QUOTED'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_open_bid_pending"/> THEN 'OPEN_BID_PENDING'
        WHEN h.rfx_status in ('IN_QUOTATION', 'SCORING','CHECK_PENDING','CHECK_REJECTED')  AND <include refid="status_round_quotation"/> THEN 'ROUND_QUOTATION'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_scoring"/> THEN 'SCORING'
        WHEN h.rfx_status in ('SCORING','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','INITIAL_REVIEW_SCORING','RFX_INITIAL_REVIEW_PENDING') THEN 'SCORING'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_pretrial_pending"/> THEN 'PRETRIAL_PENDING'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_check_pending"/> THEN 'CHECK_PENDING'
        ELSE h.rfx_status
        END
    </sql>
    <sql id="status_sort">
        ,
        CASE
        WHEN temp.rfx_status = 'NEW' THEN 1
        WHEN temp.rfx_status = 'RELEASE_APPROVING' THEN 2
        WHEN temp.rfx_status = 'RELEASE_REJECTED' THEN 3
        WHEN temp.rfx_status = 'NOT_START' THEN 4
        WHEN temp.rfx_status = 'IN_PREQUAL' THEN 5
        WHEN temp.rfx_status = 'PENDING_PREQUAL' THEN 6
        WHEN temp.rfx_status = 'IN_QUOTATION' THEN 7
        WHEN temp.rfx_status = 'LACK_QUOTED' THEN 8
        WHEN temp.rfx_status = 'OPEN_BID_PENDING' THEN 9
        WHEN temp.rfx_status = 'OPENED' THEN 10
        WHEN temp.rfx_status = 'SCORING' THEN 11
        WHEN temp.rfx_status = 'ROUND_QUOTATION' THEN 12
        WHEN temp.rfx_status = 'PRE_EVALUATION_APPROVING' THEN 13
        WHEN temp.rfx_status = 'PRE_EVALUATION_PENDING_REJECT' THEN 14
        WHEN temp.rfx_status = 'PRETRIAL_PENDING' THEN 15
        WHEN temp.rfx_status = 'CHECK_PENDING' THEN 16
        WHEN temp.rfx_status = 'CHECK_APPROVING' THEN 17
        WHEN temp.rfx_status = 'CHECK_REJECTED' THEN 18
        WHEN temp.rfx_status = 'FINISHED' THEN 19
        WHEN temp.rfx_status = 'PAUSED' THEN 20
        WHEN temp.rfx_status = 'CLOSED' THEN 21
        WHEN temp.rfx_status = 'ROUNDED' THEN 22 ELSE 23 END AS status_sort
    </sql>
    <select id="listHeaders" resultType="org.srm.source.rfx.api.dto.SourceHeaderDTO">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        select
        *
        <if test='sortParam != null and sortParam == "STATUS"'>
            <include refid="status_sort"/>
        </if>
        from (
        select
        h.rfx_header_id,
        h.estimated_start_time,
        h.tenant_id,
        h.bid_bond,
        h.bid_file_expense,
        h.rfx_num,
        h.rfx_status as db_status,
        case when h.rfx_status in ('SCORING','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','RFX_INITIAL_REVIEW_PENDING','INITIAL_REVIEW_SCORING') THEN h.rfx_status else 'SCORING' end as score_status,
        <include refid="rfx_status_case_when"/> as rfx_status,
        h.rfx_title,
        h.template_id,
        h.source_category,
        h.source_method,
        h.pur_organization_id,
        h.company_id,
        --         case when h.company_name is null then (select hc.company_name from hpfm_company hc where hc.company_id = h.company_id) else h.company_name end as company_name,
        h.company_name,
        h.auction_direction,
        h.budget_amount,
        h.tax_included_flag,
        h.tax_id,
        h.tax_rate,
        h.currency_code,
        h.exchange_rate_id,
        h.exchange_rate_type,
        h.exchange_rate_date,
        h.exchange_rate_period,
        h.exchange_rate,
        h.rfx_remark,
        h.internal_remark,
        h.quotation_start_date,
        h.sealed_quotation_flag,
        h.open_rule,
        h.auction_ranking,
        h.source_type,
        h.price_category,
        h.hand_down_date,
        h.payment_type_id,
        h.payment_term_id,
        h.round_number,
        h.version_number,
        h.quotation_order_type,
        h.quotation_running_duration,
        h.quotation_interval,
        h.auction_rule,
        h.auto_defer_flag,
        h.auto_defer_duration,
        h.released_date,
        h.released_by,
        h.terminated_date,
        h.terminated_by,
        h.terminated_remark,
        h.time_adjusted_date,
        h.time_adjusted_by,
        h.time_adjusted_remark,
        h.closed_flag,
        h.source_from,
        h.pretrail_remark,
        h.total_cost,
        h.cost_remark,
        h.tech_attachment_uuid,
        h.business_attachment_uuid,
        h.check_attachment_uuid,
        h.back_pretrial_remark,
        h.object_version_number,
        h.creation_date,
        h.created_by,
        h.last_updated_by,
        h.quotation_type,
        h.last_update_date,
        h.quotation_scope,
        h.start_flag,
        h.start_quotation_running_duration,
        h.unit_id,
        h.created_unit_id,
        hut.unit_name created_unit_name,
        h.current_sequence_num,
        CASE WHEN h.latest_quotation_end_date IS NULL THEN h.quotation_end_date ELSE h.latest_quotation_end_date END as quotation_end_date,
        h.latest_quotation_end_date,
        h.bargain_status,
        h.bargain_end_date,
        h.bargain_attachment_uuid,
        h.purchaser_id,
        h.multi_currency_flag,
        h.pretrial_uuid,
        h.pretrial_user_id,
        h.check_remark,
        h.finishing_rate,
        h.central_purchase_flag,
        h.min_quoted_supplier,
        h.checked_by,
        h.matter_require_flag,
        h.matter_detail,
        h.payment_term_flag,
        h.payment_clause,
        h.rank_rule,
        h.pur_name,
        h.pur_email,
        h.pur_phone,
        h.check_finished_date,
        h.source_project_id,
        h.project_line_section_id,
        h.multi_section_flag,
        h.quotation_rounds,
        sst.template_name,
        sst.opener_flag,
        sst.quotation_end_date_flag,
        sst.source_announcement_flag,
        sst.expert_score_type,
        sst.qualification_type,
        sst.max_vendor_quantity,
        sst.min_vendor_number,
        sst.quantity_change_flag,
        sst.tax_change_flag,
        sst.pretrial_flag,
        sst.match_restrict_flag,
        sst.valid_date_input_type,
        sst.source_stage,
        sst.bargain_rule,
        sst.bargain_offline_flag,
        sst.auto_defer_type,
        sst.auto_defer_period,
        sst.max_defer_count,
        sst.diy_ladder_quotation_flag,
        sst.open_bid_order,
        sst.initial_review,
        'NONE' subject_matter_rule,
        sst.bid_rule_type,
        sst.budget_control_rule,
        sst.freight_updatable_flag,
        sst.continuous_quotation_flag,
        sph.prequal_header_id,
        sph.prequal_end_date,
        sph.prequal_location,
        sph.qualified_limit,
        sph.review_method,
        sph.file_free_flag,
        sph.prequal_file_expense,
        sph.prequal_remark,
        sph.enable_score_flag,
        sph.prequal_attachment_uuid,
        sph.prequal_status,
        sph.approved_date,
        sph.approved_remark,
        sph.manufacturer_type,
        sph.object_version_number as prequal_object_version_number,
        sph.prequal_user_id,
        hpo.organization_name as pur_organization_name,
        iu.real_name as created_by_name,
        srh.round_header_status,
        srh.round_quotation_end_date,
        srh.quotation_round_number,
        sst.round_quotation_rule,
        sst.fast_bidding,
        srh.round_header_id,
        spls.section_code,
        spls.section_name
        from ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        join ssrc_rfx_member ssrm on ssrm.rfx_header_id = h.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        join iam_user iu on iu.id = h.created_by
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header srh on srh.source_header_id = h.rfx_header_id and srh.source_from = 'RFX' and h.round_number = srh.round_number
        left join hpfm_employee_user heu on heu.user_id = h.created_by and heu.tenant_id = h.tenant_id
        left join hpfm_employee_assign hea on hea.employee_id = heu.employee_id and hea.tenant_id = heu.tenant_id and hea.primary_position_flag = 1
        left join hpfm_unit_tl hut on hut.unit_id = hea.unit_id and hut.lang = #{lang}
        left join ssrc_project_line_section spls on h.project_line_section_id = spls.project_line_section_id
        where h.tenant_id = #{tenantId}
        <if test="rfxHeaderId != null">
            and h.rfx_header_id = #{rfxHeaderId}
        </if>
        <if test="rfxHeaderIds != null">
            <if test="rfxHeaderIds != null and rfxHeaderIds.size()>0">
                and h.rfx_header_id in
                <foreach collection="rfxHeaderIds" open="(" close=")" separator="," item="rfxHeaderId">
                    #{rfxHeaderId}
                </foreach>
            </if>
        </if>
        <if test="purchaserId != null">
            and h.purchaser_id = #{purchaserId}
        </if>
        <if test="createdBy != null">
            and h.created_by = #{createdBy}
        </if>
        <if test="sealedQuotationFlag != null">
            and h.sealed_quotation_flag = #{sealedQuotationFlag}
        </if>
        <if test="purOrganizationId != null">
            and h.pur_organization_id = #{purOrganizationId}
        </if>
        <if test="sourceMethod != null and sourceMethod != ''">
            and h.source_method = #{sourceMethod}
        </if>
        <if test="currencyCode != null and currencyCode != ''">
            and h.currency_code = #{currencyCode}
        </if>
        <if test="sourceCategory != null and sourceCategory != ''">
            and h.source_category = #{sourceCategory}
        </if>
        <if test="rfxNum != null and rfxNum != ''">
            <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
            and h.rfx_num like #{rfxNumLike}
        </if>
        <if test="rfxTitle != null and rfxTitle != ''">
            <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
            and h.rfx_title like #{rfxTitleLike}
        </if>
        <if test="quotationType != null and quotationType != ''">
            and h.quotation_type = #{quotationType}
        </if>
        <if test="auctionDirection != null and auctionDirection != ''">
            and h.auction_direction = #{auctionDirection}
        </if>
        <if test="quotationStartDateFrom != null">
            and h.quotation_start_date &gt; #{quotationStartDateFrom}
        </if>
        <if test="quotationStartDateTo != null">
            and h.quotation_start_date &lt; #{quotationStartDateTo}
        </if>
        <if test="quotationEndDateFrom != null">
            and h.quotation_end_date &gt; #{quotationEndDateFrom}
        </if>
        <if test="quotationEndDateTo != null">
            and h.quotation_end_date &lt; #{quotationEndDateTo}
        </if>
        <if test="creationDateFrom != null">
            and h.creation_date &gt; #{creationDateFrom}
        </if>
        <if test="creationDateTo != null">
            and h.creation_date &lt; #{creationDateTo}
        </if>
        <if test="prNum != null and prNum != ''">
            <bind name="prNumLike" value="'%'+prNum+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_num like #{prNumLike})
        </if>
        <if test="prLineNum != null and prLineNum != ''">
            <bind name="prLineNumLike" value="'%'+prLineNum+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_line_num like #{prLineNumLike})
        </if>
        <if test="ouId != null">
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and ou_id = #{ouId})
        </if>
        <if test="sourceProjectId != null">
            and h.source_project_id = #{sourceProjectId}
        </if>
        <if test="supplierCompanyName != null and supplierCompanyName != ''">
            <bind name="supplierCompanyNameLike" value="'%'+supplierCompanyName+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id and supplier_company_name like #{supplierCompanyNameLike})
        </if>
        <if test="excludeRfxHeaderId != null">
            and h.rfx_header_id != #{excludeRfxHeaderId}
        </if>
        <choose>
            <!--> 寻源大厅-未发布 <-->
            <when test='stageCode != null and stageCode == "UNRELEASED"'>
                and h.rfx_status in ('NEW','ROUNDED','RELEASE_REJECTED')
                and (case when h.rfx_status = 'RELEASE_REJECTED' and h.created_by = #{userDetails.userId} then 2 else 1 end ) = 1
            </when>
            <!--> 寻源大厅-已完成-询价成功 <-->
            <when test='stageCode != null and stageCode == "SUCCESS"'>
                and h.rfx_status = 'FINISHED' and exists (select 1 from ssrc_rfx_quotation_header srqh join ssrc_rfx_quotation_line srql on srqh.quotation_header_id = srql.quotation_header_id where srqh.rfx_header_id = h.rfx_header_id and suggested_flag = 1)
            </when>
            <!--> 寻源大厅-已完成-其他 <-->
            <when test='stageCode != null and stageCode == "OTHERS"'>
                and ((h.rfx_status = 'FINISHED' and not exists (select 1 from ssrc_rfx_quotation_header srqh join ssrc_rfx_quotation_line srql on srqh.quotation_header_id = srql.quotation_header_id where srqh.rfx_header_id = h.rfx_header_id and suggested_flag = 1)) or h.rfx_status = 'CLOSED')
            </when>
            <!--> 寻源大厅-审批中 <-->
            <when test='stageCode != null and stageCode == "APPROVING"'>
                and h.rfx_status in ('RELEASE_APPROVING','CHECK_APPROVING','PRE_EVALUATION_APPROVING')
            </when>
        </choose>
        ) temp where 1=1
        <choose>
            <!--> 寻源大厅-需要处理 <-->
            <when test='stageCode != null and stageCode == "PROCESSING"'>
                and temp.rfx_status in ('RELEASE_REJECTED','IN_PREQUAL','PENDING_PREQUAL','IN_QUOTATION','OPEN_BID_PENDING','PRETRIAL_PENDING','SCORING','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','LACK_QUOTED','ROUND_QUOTATION','CHECK_PENDING','CHECK_REJECTED','PRE_EVALUATION_PENDING_REJECT','OPENED')
                <if test="rfxStatus != null and rfxStatus != ''">
                    <choose>
                        <when test="rfxStatus == 'BARGAINING'">
                            AND (temp.bargain_status = 'BARGAINING_OFFLINE' OR temp.bargain_status = 'BARGAINING_ONLINE')
                            AND temp.bargain_end_date &gt; #{now}
                        </when>
                        <otherwise>
                            AND temp.rfx_status = #{rfxStatus}
                        </otherwise>
                    </choose>
                </if>
                and (case
                when temp.rfx_status = 'RELEASE_REJECTED' and temp.created_by != #{userDetails.userId} then 0
                when temp.rfx_status = 'IN_PREQUAL' or temp.rfx_status = 'PENDING_PREQUAL' then <include refid="prequal_role"/>
                when temp.rfx_status = 'IN_QUOTATION' and (temp.sealed_quotation_flag = 1 or <include refid="rfx_role"/> is null) then 0
                when temp.rfx_status = 'SCORING' and temp.initial_review = 'NEED' and <include refid="scoring_review_role"/> =1 and <include refid="scoring_leader_role"/> is null and temp.round_quotation_rule in ('SCORE','AUTO_SCORE') and temp.round_header_status IN ('ROUND_SCORE','ROUND_SCORING') then 0
                when temp.rfx_status = 'SCORING' and temp.initial_review = 'NEED' and <include refid="scoring_review_role"/> is null and <include refid="scoring_leader_role"/> is null  then 0
                when temp.rfx_status = 'SCORING' and  <include refid="scoring_role"/> is null and <include refid="scoring_leader_role"/> is null then 0
                when temp.rfx_status = 'OPEN_BID_PENDING' then  <include refid="opener_role"/>
                when temp.rfx_status = 'PRE_EVALUATION_PENDING_REJECT' then  <include refid="scoring_leader_role"/>
                when temp.rfx_status = 'PRETRIAL_PENDING' then <include refid="pretrial_role"/>
                when temp.rfx_status = 'CHECK_PENDING'  or temp.rfx_status = 'CHECK_REJECTED' then <include refid="check_role"/>
                when temp.rfx_status = 'ROUND_QUOTATION' and temp.round_quotation_rule in ('SCORE','AUTO_SCORE') then <include refid="scoring_leader_role"/>
                when temp.rfx_status = 'ROUND_QUOTATION' and temp.round_quotation_rule in ('CHECK','AUTO_CHECK') then <include refid="check_role"/>
                else 1 end
                ) = 1
            </when>

            <!--> 寻源大厅-需要关注 <-->
            <when test='stageCode != null and stageCode == "ATTENTION"'>
                and temp.rfx_status in ('NOT_START','IN_PREQUAL','PENDING_PREQUAL','IN_QUOTATION','OPEN_BID_PENDING','PRETRIAL_PENDING','SCORING','CHECK_PENDING','CHECK_REJECTED','PRE_EVALUATION_PENDING_REJECT','PAUSED','ROUND_QUOTATION')
                <if test="rfxStatus != null and rfxStatus != ''">
                    <choose>
                        <when test="rfxStatus == 'BARGAINING'">
                            AND (temp.bargain_status = 'BARGAINING_OFFLINE' OR temp.bargain_status = 'BARGAINING_ONLINE')
                            AND temp.bargain_end_date &gt; #{now}
                        </when>
                        <otherwise>
                            AND temp.rfx_status = #{rfxStatus}
                        </otherwise>
                    </choose>
                </if>
                and (case
                when temp.rfx_status in ('IN_PREQUAL','PENDING_PREQUAL') and  <include refid="prequal_role"/> = 1 then 0
                when temp.rfx_status = 'IN_QUOTATION' and temp.sealed_quotation_flag = 0 and <include refid="rfx_role"/> = 1 then 0
                when temp.rfx_status = 'SCORING' and temp.initial_review = 'NEED' and <include refid="scoring_review_role"/> =1 and <include refid="scoring_leader_role"/> is null and temp.round_quotation_rule in ('SCORE','AUTO_SCORE') and temp.round_header_status IN ('ROUND_SCORE','ROUND_SCORING') then 1
                when temp.rfx_status = 'SCORING' and temp.initial_review = 'NEED' and <include refid="scoring_review_role"/> is null and <include refid="scoring_leader_role"/> is null  then 1
                when temp.rfx_status = 'SCORING' and (<include refid="scoring_role"/> = 1 or <include refid="scoring_leader_role"/> = 1) then 0
                when temp.rfx_status = 'OPEN_BID_PENDING' and <include refid="opener_role"/> = 1 then 0
                when temp.rfx_status = 'PRE_EVALUATION_PENDING_REJECT' and <include refid="scoring_leader_role"/> = 1 then 0
                when temp.rfx_status = 'PRETRIAL_PENDING' and <include refid="pretrial_role"/> = 1 then 0
                when (temp.rfx_status = 'CHECK_PENDING'  or temp.rfx_status = 'CHECK_REJECTED') and <include refid="check_role"/> = 1 then 0
                when temp.rfx_status = 'ROUND_QUOTATION' and temp.round_quotation_rule in ('SCORE','AUTO_SCORE') and <include refid="scoring_leader_role"/> = 1 then 0
                when temp.rfx_status = 'ROUND_QUOTATION' and temp.round_quotation_rule in ('CHECK','AUTO_CHECK') and <include refid="check_role"/> = 1 then 0
                else 1 end
                ) = 1
            </when>

            <!--> 寻源大厅-全部 <-->
            <when test='stageCode != null and stageCode == "ALL"'>
                <if test="rfxStatus != null and rfxStatus != ''">
                    <choose>
                        <when test="rfxStatus == 'BARGAINING'">
                            AND (temp.bargain_status = 'BARGAINING_OFFLINE' OR temp.bargain_status = 'BARGAINING_ONLINE')
                            AND temp.bargain_end_date &gt; #{now}
                        </when>
                        <otherwise>
                            and temp.rfx_status = #{rfxStatus}
                        </otherwise>
                    </choose>
                </if>
            </when>
        </choose>
        <if test="rfxStatus != null and rfxStatus != ''">
            <choose>
                <when test="rfxStatus == 'BARGAINING'">
                    AND (temp.bargain_status = 'BARGAINING_OFFLINE' OR temp.bargain_status = 'BARGAINING_ONLINE')
                    AND temp.bargain_end_date &gt; #{now}
                </when>
                <when test="rfxStatus == 'CHECK_PENDING' or rfxStatus == 'SCORING' or rfxStatus == 'ROUND_QUOTATION'">
                    AND temp.rfx_status = #{rfxStatus}
                    AND temp.bargain_status NOT IN ('BARGAINING_OFFLINE','BARGAINING_ONLINE')
                </when>
                <otherwise>
                    and temp.rfx_status = #{rfxStatus}
                </otherwise>
            </choose>
        </if>
        <if test="queryParam != null and queryParam != ''">
            <bind name="queryParamLike" value="'%'+queryParam+'%'"/>
            and (
            temp.rfx_num like #{queryParamLike} or
            temp.rfx_title like #{queryParamLike} or
            exists (select 1 from ssrc_source_project where source_project_id = temp.source_project_id and source_project_name like #{queryParamLike}) or
            exists (select 1 from ssrc_rfx_line_item where rfx_header_id = temp.rfx_header_id and pr_num like #{queryParamLike})  or
            temp.rfx_status in (select lv.value from hpfm_lov_value lv join hpfm_lov_value_tl lvtl on lv.lov_value_id = lvtl.lov_value_id and lvtl.lang = #{lang} where lv.lov_code = 'SSRC.RFX_STATUS' and lv.meaning like #{queryParamLike})
            )
        </if>
        <if test='stageCode == "UNRELEASED" or stageCode == "PROCESSING" or stageCode == "OTHERS" or stageCode == "ALL"'>
            <if test="sortParam == null">
                ORDER BY temp.creation_date DESC
            </if>
        </if>
        <if test='stageCode == "ATTENTION" or stageCode == "SUCCESS" or stageCode == "APPROVING"'>
            <if test="sortParam == null">
                ORDER BY temp.creation_date DESC
            </if>
        </if>
        <if test='sortParam != null and sortParam == "CREATE_DATE"'>
            ORDER BY temp.creation_date DESC
        </if>
        <if test='sortParam != null and sortParam == "START_DATE"'>
            ORDER BY temp.quotation_start_date DESC
        </if>
        <if test='sortParam != null and sortParam == "STATUS"'>
            ORDER BY status_sort ASC, temp.creation_date DESC
        </if>
    </select>

    <sql id="prequal_role">
        (select MAX(1) from ssrc_prequal_member where source_header_id = temp.rfx_header_id and source_from = 'RFX' and user_id = #{userDetails.userId})
    </sql>
    <sql id="rfx_role">
        (select MAX(1) from ssrc_rfx_member where rfx_header_id = temp.rfx_header_id and rfx_role = 'RFX_BY' and user_id = #{userDetails.userId})
    </sql>
    <sql id="scoring_role">
        (select MAX(1) from ssrc_evaluate_expert where source_header_id = temp.rfx_header_id and source_from = 'RFX' and sequence_num = temp.current_sequence_num and expert_user_id = #{userDetails.userId})
    </sql>
    <sql id="scoring_leader_role">
        (select MAX(1) from ssrc_evaluate_expert where source_header_id = temp.rfx_header_id and source_from = 'RFX' and evaluate_leader_flag = 1 and expert_user_id = #{userDetails.userId})
    </sql>
    <sql id="pretrial_role">
        (select MAX(1) from ssrc_rfx_member where rfx_header_id = temp.rfx_header_id and rfx_role = 'PRETRIAL_BY' and user_id = #{userDetails.userId})
    </sql>
    <sql id="check_role">
        (select MAX(1) from ssrc_rfx_member where rfx_header_id = temp.rfx_header_id and rfx_role = 'CHECKED_BY' and user_id = #{userDetails.userId})
    </sql>
    <sql id="opener_role">
        (select MAX(1) from ssrc_rfx_member where rfx_header_id = temp.rfx_header_id and rfx_role = 'OPENED_BY' and user_id = #{userDetails.userId})
    </sql>
    <sql id="scoring_review_role">
        (SELECT
             MAX(1)
         FROM
             ssrc_evaluate_indic_assign seia
                 JOIN ssrc_evaluate_indic sei ON seia.evaluate_indic_id = sei.evaluate_indic_id
                 JOIN ssrc_evaluate_expert see ON seia.evaluate_expert_id = see.evaluate_expert_id
         WHERE
             see.source_header_id = temp.rfx_header_id
           AND see.source_from = 'RFX'
           AND see.expert_user_id = #{userDetails.userId}
           AND seia.assign_flag = 1
           AND sei.team = 'INITIAL_REVIEW')
    </sql>


    <select id="selectListHeadersCount" resultType="java.util.HashMap">
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        count( case when (temp.rfx_status in ('NEW','ROUNDED') or (temp.rfx_status = 'RELEASE_REJECTED' and temp.created_by != #{userDetails.userId})) then 1 else null end) AS unrelease,
        count(case when temp.rfx_status in ('FINISHED','CLOSED') then 1 else null end) AS finished,
        count(case when temp.rfx_status IN ('NOT_START','IN_PREQUAL','PENDING_PREQUAL','IN_QUOTATION','OPEN_BID_PENDING','PRETRIAL_PENDING','SCORING','CHECK_PENDING','PRE_EVALUATION_PENDING_REJECT','PAUSED','ROUND_QUOTATION','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','LACK_QUOTED','CHECK_REJECTED','OPENED','RELEASE_APPROVING','CHECK_APPROVING','PRE_EVALUATION_APPROVING')   then 1
        when temp.rfx_status = 'RELEASE_REJECTED' and temp.created_by = #{userDetails.userId} then 1 else null end) AS ongoing,
        count(1) AS total
        from (
        select
        h.rfx_num,
        h.created_by,
        h.rfx_header_id,
        h.rfx_title,
        h.source_project_id,
        h.bargain_end_date,
        h.project_line_section_id,
        h.multi_section_flag,
        h.bargain_status,
        <include refid="rfx_status_case_when"/> as rfx_status
        from ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        join ssrc_rfx_member ssrm on h.rfx_header_id = ssrm.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header srh on srh.source_header_id = h.rfx_header_id and srh.source_from = 'RFX' and h.round_number = srh.round_number
        where h.tenant_id = #{tenantId}
        <if test="rfxHeaderId != null">
            and h.rfx_header_id = #{rfxHeaderId}
        </if>
        <if test="purchaserId != null">
            and h.purchaser_id = #{purchaserId}
        </if>
        <if test="createdBy != null">
            and h.created_by = #{createdBy}
        </if>
        <if test="sealedQuotationFlag != null">
            and h.sealed_quotation_flag = #{sealedQuotationFlag}
        </if>
        <if test="purOrganizationId != null">
            and h.pur_organization_id = #{purOrganizationId}
        </if>
        <if test="sourceMethod != null and sourceMethod != ''">
            and h.source_method = #{sourceMethod}
        </if>
        <if test="currencyCode != null and currencyCode != ''">
            and h.currency_code = #{currencyCode}
        </if>
        <if test="sourceCategory != null and sourceCategory != ''">
            and h.source_category = #{sourceCategory}
        </if>
        <if test="rfxNum != null and rfxNum != ''">
            <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
            and h.rfx_num like #{rfxNumLike}
        </if>
        <if test="rfxTitle != null and rfxTitle != ''">
            <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
            and h.rfx_title like #{rfxTitleLike}
        </if>
        <if test="auctionDirection != null and auctionDirection != ''">
            and h.auction_direction = #{auctionDirection}
        </if>
        <if test="quotationType != null and quotationType != ''">
            and h.quotation_type = #{quotationType}
        </if>
        <if test="quotationStartDateFrom != null">
            and h.quotation_start_date &gt; #{quotationStartDateFrom}
        </if>
        <if test="quotationStartDateTo != null">
            and h.quotation_start_date &lt; #{quotationStartDateTo}
        </if>
        <if test="quotationEndDateFrom != null">
            and h.quotation_end_date &gt; #{quotationEndDateFrom}
        </if>
        <if test="quotationEndDateTo != null">
            and h.quotation_end_date &lt; #{quotationEndDateTo}
        </if>
        <if test="creationDateFrom != null">
            and h.creation_date &gt; #{creationDateFrom}
        </if>
        <if test="creationDateTo != null">
            and h.creation_date &lt; #{creationDateTo}
        </if>
        <if test="sourceProjectId != null">
            and h.source_project_id = #{sourceProjectId}
        </if>
        <if test="prNum != null and prNum != ''">
            <bind name="prNumLike" value="'%'+prNum+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_num like #{prNumLike})
        </if>
        <if test="prLineNum != null and prLineNum != ''">
            <bind name="prLineNumLike" value="'%'+prLineNum+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_line_num like #{prLineNumLike})
        </if>
        <if test="ouId != null">
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and ou_id = #{ouId})
        </if>
        <if test="supplierCompanyName != null and supplierCompanyName != ''">
            <bind name="supplierCompanyNameLike" value="'%'+supplierCompanyName+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id and supplier_company_name like #{supplierCompanyNameLike})
        </if>
        ) temp where 1=1
        <if test="rfxStatus != null and rfxStatus != ''">
            <choose>
                <when test="rfxStatus == 'BARGAINING'">
                    AND (temp.bargain_status = 'BARGAINING_OFFLINE' OR temp.bargain_status = 'BARGAINING_ONLINE')
                    AND temp.bargain_end_date &gt; #{now}
                </when>
                <when test="rfxStatus == 'CHECK_PENDING' or rfxStatus == 'SCORING' or rfxStatus == 'ROUND_QUOTATION'">
                    AND temp.rfx_status = #{rfxStatus}
                    AND temp.bargain_status NOT IN ('BARGAINING_OFFLINE','BARGAINING_ONLINE')
                </when>
                <otherwise>
                    and temp.rfx_status = #{rfxStatus}
                </otherwise>
            </choose>
        </if>
        <if test="queryParam != null and queryParam != ''">
            <bind name="queryParamLike" value="'%'+queryParam+'%'"/>
            and (
            temp.rfx_num like #{queryParamLike} or
            temp.rfx_title like #{queryParamLike} or
            exists (select 1 from ssrc_source_project where source_project_id = temp.source_project_id and source_project_name like #{queryParamLike}) or
            exists (select 1 from ssrc_rfx_line_item where rfx_header_id = temp.rfx_header_id and pr_num like #{queryParamLike})  or
            temp.rfx_status in (select lv.value from hpfm_lov_value lv join hpfm_lov_value_tl lvtl on lv.lov_value_id = lvtl.lov_value_id and lvtl.lang = #{lang} where lv.lov_code = 'SSRC.RFX_STATUS' and lv.meaning like #{queryParamLike})
            )
        </if>
    </select>
    <select id="selectListHeadersProcessingCount" resultType="java.lang.Long">
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        count(case
        when temp.rfx_status IN ('RELEASE_REJECTED','IN_PREQUAL','PENDING_PREQUAL','IN_QUOTATION','OPEN_BID_PENDING','PRETRIAL_PENDING','SCORING','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','LACK_QUOTED','ROUND_QUOTATION','CHECK_PENDING','CHECK_REJECTED','PRE_EVALUATION_PENDING_REJECT','OPENED') then 1
        else null end)
        from (
        select
        h.created_by,
        h.sealed_quotation_flag,
        srh.round_quotation_rule,
        h.current_sequence_num,
        h.rfx_num,
        h.rfx_header_id,
        h.source_project_id,
        sst.initial_review,
        srh.round_header_status,
        h.rfx_title,
        h.bargain_end_date,
        h.bargain_status,
        <include refid="rfx_status_case_when"/> as rfx_status
        from ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        join ssrc_rfx_member ssrm on h.rfx_header_id = ssrm.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'
        left join ssrc_round_header srh on srh.source_header_id = h.rfx_header_id and srh.source_from = 'RFX' and h.round_number = srh.round_number
        where h.tenant_id = #{tenantId}
        <if test="rfxHeaderId != null">
            and h.rfx_header_id = #{rfxHeaderId}
        </if>
        <if test="purchaserId != null">
            and h.purchaser_id = #{purchaserId}
        </if>
        <if test="createdBy != null">
            and h.created_by = #{createdBy}
        </if>
        <if test="sealedQuotationFlag != null">
            and h.sealed_quotation_flag = #{sealedQuotationFlag}
        </if>
        <if test="purOrganizationId != null">
            and h.pur_organization_id = #{purOrganizationId}
        </if>
        <if test="sourceMethod != null and sourceMethod != ''">
            and h.source_method = #{sourceMethod}
        </if>
        <if test="currencyCode != null and currencyCode != ''">
            and h.currency_code = #{currencyCode}
        </if>
        <if test="sourceCategory != null and sourceCategory != ''">
            and h.source_category = #{sourceCategory}
        </if>
        <if test="rfxNum != null and rfxNum != ''">
            <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
            and h.rfx_num like #{rfxNumLike}
        </if>
        <if test="rfxTitle != null and rfxTitle != ''">
            <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
            and h.rfx_title like #{rfxTitleLike}
        </if>
        <if test="auctionDirection != null and auctionDirection != ''">
            and h.auction_direction = #{auctionDirection}
        </if>
        <if test="quotationType != null and quotationType != ''">
            and h.quotation_type = #{quotationType}
        </if>
        <if test="quotationStartDateFrom != null">
            and h.quotation_start_date &gt; #{quotationStartDateFrom}
        </if>
        <if test="quotationStartDateTo != null">
            and h.quotation_start_date &lt; #{quotationStartDateTo}
        </if>
        <if test="quotationEndDateFrom != null">
            and h.quotation_end_date &gt; #{quotationEndDateFrom}
        </if>
        <if test="quotationEndDateTo != null">
            and h.quotation_end_date &lt; #{quotationEndDateTo}
        </if>
        <if test="creationDateFrom != null">
            and h.creation_date &gt; #{creationDateFrom}
        </if>
        <if test="creationDateTo != null">
            and h.creation_date &lt; #{creationDateTo}
        </if>
        <if test="sourceProjectId != null">
            and h.source_project_id = #{sourceProjectId}
        </if>
        <if test="prNum != null and prNum != ''">
            <bind name="prNumLike" value="'%'+prNum+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_num like #{prNumLike})
        </if>
        <if test="prLineNum != null and prLineNum != ''">
            <bind name="prLineNumLike" value="'%'+prLineNum+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and pr_line_num like #{prLineNumLike})
        </if>
        <if test="ouId != null">
            and  exists (select 1 from ssrc_rfx_line_item where rfx_header_id = h.rfx_header_id and ou_id = #{ouId})
        </if>
        <if test="supplierCompanyName != null and supplierCompanyName != ''">
            <bind name="supplierCompanyNameLike" value="'%'+supplierCompanyName+'%'"/>
            and  exists (select 1 from ssrc_rfx_line_supplier where rfx_header_id = h.rfx_header_id and supplier_company_name like #{supplierCompanyNameLike})
        </if>
        ) temp where 1=1

        and (case
        when temp.rfx_status = 'RELEASE_REJECTED' and temp.created_by != #{userDetails.userId} then 0
        when temp.rfx_status = 'IN_PREQUAL' or temp.rfx_status = 'PENDING_PREQUAL' then <include refid="prequal_role"/>
        when temp.rfx_status = 'IN_QUOTATION' and (temp.sealed_quotation_flag = 1 or <include refid="rfx_role"/> is null) then 0
        when temp.rfx_status = 'SCORING' and temp.initial_review = 'NEED' and <include refid="scoring_review_role"/> =1 and <include refid="scoring_leader_role"/> is null and temp.round_quotation_rule in ('SCORE','AUTO_SCORE') and temp.round_header_status IN ('ROUND_SCORE','ROUND_SCORING') then 0
        when temp.rfx_status = 'SCORING' and temp.initial_review = 'NEED' and <include refid="scoring_review_role"/> is null and <include refid="scoring_leader_role"/> is null  then 0
        when temp.rfx_status = 'SCORING' and  <include refid="scoring_role"/> is null and <include refid="scoring_leader_role"/> is null then 0
        when temp.rfx_status = 'OPEN_BID_PENDING' then  <include refid="opener_role"/>
        when temp.rfx_status = 'PRE_EVALUATION_PENDING_REJECT' then  <include refid="scoring_leader_role"/>
        when temp.rfx_status = 'PRETRIAL_PENDING' then <include refid="pretrial_role"/>
        when temp.rfx_status = 'CHECK_PENDING'  or temp.rfx_status = 'CHECK_REJECTED' then <include refid="check_role"/>
        when temp.rfx_status = 'ROUND_QUOTATION' and temp.round_quotation_rule in ('SCORE','AUTO_SCORE') then <include refid="scoring_leader_role"/>
        when temp.rfx_status = 'ROUND_QUOTATION' and temp.round_quotation_rule in ('CHECK','AUTO_CHECK') then <include refid="check_role"/>
        else 1 end
        ) = 1
        <if test="rfxStatus != null and rfxStatus != ''">
            <choose>
                <when test="rfxStatus == 'BARGAINING'">
                    AND (temp.bargain_status = 'BARGAINING_OFFLINE' OR temp.bargain_status = 'BARGAINING_ONLINE')
                    AND temp.bargain_end_date &gt; #{now}
                </when>
                <when test="rfxStatus == 'CHECK_PENDING' or rfxStatus == 'SCORING' or rfxStatus == 'ROUND_QUOTATION'">
                    AND temp.rfx_status = #{rfxStatus}
                    AND temp.bargain_status NOT IN ('BARGAINING_OFFLINE','BARGAINING_ONLINE')
                </when>
                <otherwise>
                    and temp.rfx_status = #{rfxStatus}
                </otherwise>
            </choose>
        </if>
        <if test="queryParam != null and queryParam != ''">
            <bind name="queryParamLike" value="'%'+queryParam+'%'"/>
            and (
            temp.rfx_num like #{queryParamLike} or
            temp.rfx_title like #{queryParamLike} or
            exists (select 1 from ssrc_source_project where source_project_id = temp.source_project_id and source_project_name like #{queryParamLike}) or
            exists (select 1 from ssrc_rfx_line_item where rfx_header_id = temp.rfx_header_id and pr_num like #{queryParamLike})  or
            temp.rfx_status in (select lv.value from hpfm_lov_value lv join hpfm_lov_value_tl lvtl on lv.lov_value_id = lvtl.lov_value_id and lvtl.lang = #{lang} where lv.lov_code = 'SSRC.RFX_STATUS' and lv.meaning like #{queryParamLike})
            )
        </if>
    </select>
    <select id="checkReviewExpertIndicAssign" resultType="org.srm.source.share.domain.entity.EvaluateExpert">
        select
            iu.real_name as expert_name,
            (select count(*) from ssrc_evaluate_indic_assign seia
                                      join ssrc_evaluate_indic sei on sei.evaluate_indic_id = seia.evaluate_indic_id
             where see.evaluate_expert_id  = seia.evaluate_expert_id
               and see.source_header_id = seia.source_header_id
               and sei.team = 'INITIAL_REVIEW'
               and seia.assign_flag =1) as assign_count
        from
            ssrc_evaluate_expert see
                join iam_user iu on iu.id = see.expert_user_id
        where see.source_header_id =#{rfxHeaderId}  and see.tenant_id =#{tenantId}
          and see.evaluate_leader_flag != 1
    </select>
    <select id="getRfxWorkflowHistoryAttachmentUuid" resultType="java.lang.String">
        <bind name="now"
              value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        SELECT
        aha.name_ AS attachment_uuid
        FROM
        act_hi_procinst ahp
        JOIN act_hi_attachment aha ON aha.proc_inst_id_ = ahp.proc_inst_id_
        WHERE
        ahp.business_key_ = #{documentId}
        AND ahp.end_time_ &lt; #{now}
    </select>
    <select id="selectRfxHeaderData" resultType="org.srm.source.rfx.api.dto.ExternalRfxHeaderDTO">
        select
            srh.*,
            he.employee_num,
            hpo.organization_name as pur_organization_name,
            pt.type_name as payment_type_name,
            spt.term_name as payment_term_name,
            hut.unit_name
        FROM
            ssrc_rfx_header srh
                left join hpfm_employee_user heu on heu.user_id =srh.created_by
                left join hpfm_employee he on he.employee_id = heu.employee_id and he.tenant_id =heu.tenant_id
                left join hpfm_employee_assign hea on hea.employee_id = heu.employee_id and hea.tenant_id = heu.tenant_id and hea.primary_position_flag = 1
                left join hpfm_unit hut on hut.unit_id = hea.unit_id
                left join hpfm_purchase_organization hpo on hpo.purchase_org_id = srh.pur_organization_id
                left join smdm_payment_type pt on pt.type_id = srh.payment_type_id
                left join smdm_payment_term spt on spt.term_id = srh.payment_term_id
        where  srh.rfx_header_id = #{rfxHeaderId}
    </select>
    <select id="selectReferenceRfxHeader" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        hpo.organization_name as pur_organization_name,
        case when sst.qualification_type = 'PRE' then 1 else 0 end as pre_Qualification_Flag,
        case when sst.expert_score_type = 'ONLINE' then 1 else 0 end as expert_Score_Flag,
        iu.real_name as created_by_name
        from ssrc_rfx_header h
        join iam_user iu on iu.id = h.created_by
        join ssrc_source_template sst on sst.template_id = h.template_id
        join ssrc_rfx_member ssrm on h.rfx_header_id = ssrm.rfx_header_id and ssrm.rfx_role =  'RFX_BY'
        left join hpfm_purchase_organization hpo on hpo.purchase_org_id = h.pur_organization_id
        where h.tenant_id = #{tenantId} and h.rfx_status not in ('NEW','RELEASE_REJECTED')
            <if test="rfxHeaderId != null">
                and h.rfx_header_id = #{rfxHeaderId}
            </if>
            <if test="purchaserId != null">
                and h.purchaser_id = #{purchaserId}
            </if>
            <if test="tenantId != null">
                and h.tenant_id = #{tenantId}
            </if>
            <if test="rfxNum != null and rfxNum != ''">
                <bind name="rfxNumLike" value="'%'+rfxNum+'%'"/>
                and h.rfx_num like #{rfxNumLike}
            </if>
            <if test="purOrganizationName != null and purOrganizationName != ''">
                <bind name="purOrganizationNameLike" value="'%'+purOrganizationName+'%'"/>
                and hpo.organization_name like #{purOrganizationNameLike}
            </if>
            <if test="rfxTitle != null and rfxTitle != ''">
                <bind name="rfxTitleLike" value="'%'+rfxTitle+'%'"/>
                and h.rfx_title like #{rfxTitleLike}
            </if>
            <if test="sourceMethod != null and sourceMethod != ''">
                and h.source_method = #{sourceMethod}
            </if>
            <if test="sourceCategory != null and sourceCategory != ''">
                and h.source_category = #{sourceCategory}
            </if>
            <if test="purOrganizationId != null">
                and h.pur_organization_id = #{purOrganizationId}
            </if>
            <if test="auctionDirection != null and auctionDirection != ''">
                and h.auction_direction = #{auctionDirection}
            </if>
            <if test="currencyCode != null and currencyCode != ''">
                and h.currency_code = #{currencyCode}
            </if>
            <if test="sealedQuotationFlag != null">
                and h.sealed_quotation_flag = #{sealedQuotationFlag}
            </if>
            <if test="quotationType != null and quotationType != ''">
                AND h.quotation_type = #{quotationType}
            </if>
            <if test="prNum != null and prNum != ''">
                <bind name="prNumLike" value="'%'+prNum+'%'"/>
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.pr_num LIKE #{prNumLike})
            </if>
            <if test="prLineNum != null and prLineNum != ''">
                AND EXISTS (SELECT 1 FROM ssrc_rfx_line_item srli WHERE srli.rfx_header_id = h.rfx_header_id AND
                srli.pr_line_num = #{prLineNum})
            </if>
            <if test="createdUnitId != null">
                AND h.created_unit_id = #{createdUnitId}
            </if>
            <if test="createdUnitName != null and createdUnitName != ''">
                <bind name="createdUnitNameLike" value="'%'+createdUnitName+'%'"/>
                AND h.created_unit_name LIKE  #{createdUnitNameLike}
            </if>
            order by h.rfx_header_id desc
    </select>
    <select id="selectRfxHeaderBySourceProjectId" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        SELECT * FROM ssrc_rfx_header srh where srh.tenant_id = #{tenantId} and srh.source_project_id = #{sourceProjectId} and srh.rfx_status != 'CANCELED'
    </select>
    <select id="listBargainProcessHistogramTable" resultType="org.srm.source.rfx.api.dto.SupplierItemDTO">
        SELECT

        srqh.quotation_header_id,
        srqh.supplier_company_id,
        srqh.supplier_company_name,
        srqr.quoted_date quotation_date,
        srqr.quotation_node,
        sp.company_num supplier_company_num,
        srqh.entry_method,
        srh.rfx_header_id,
        case when srqr.quotation_round_number is null then 1 else  srqr.quotation_round_number end as round_number,
        case when srqr.quotation_price is not null and srqr.quotation_quantity is not null
        then sum(srqr.quotation_price * srqr.quotation_quantity ) else null end as total_quotation_net_amount,
        case when srqr.quotation_price is not null and srqr.quotation_quantity is not null
        then sum(srqr.valid_net_price * srqr.quotation_quantity) else null end as total_quotation_tax_amount
        FROM
        ssrc_rfx_line_item srli
        JOIN ssrc_rfx_header srh ON srh.round_number = srli.current_round_number
        AND srh.rfx_header_id = srli.rfx_header_id
        JOIN ssrc_rfx_quotation_header srqh ON srli.rfx_header_id = srqh.rfx_header_id
        AND srqh.round_number = srh.round_number
        JOIN ssrc_rfx_quotation_line srql ON srqh.quotation_header_id = srql.quotation_header_id
        AND srql.round_number = srli.current_round_number
        AND srql.quotation_line_status != 'ABANDONED'
        AND srql.rfx_line_item_id = srli.rfx_line_item_id
        join iam_user iu on iu.id = srql.created_by
        JOIN ssrc_rfx_quotation_record srqr ON srqr.quotation_line_id = srql.quotation_line_id
        LEFT JOIN hpfm_company sp ON sp.company_id = srqh.supplier_company_id
        WHERE
        srli.tenant_id = #{tenantId}
        and srli.rfx_header_id = #{rfxHeaderId}
        group by
        srqh.quotation_header_id,
        srqh.supplier_company_id,
        srqh.supplier_company_name,
        srqr.quotation_node,
        supplier_company_num,
        srqh.entry_method,
        srh.rfx_header_id,
        round_number,
        srqr.quotation_count,
        srqr.quotation_node
        <choose>
            <when test="orderType != null and orderType != ''">
                ORDER BY #{orderType}
            </when>
            <otherwise>
                ORDER BY quotation_date
            </otherwise>
        </choose>
    </select>
    <select id="batchSelectSimpleRfxHeaderDTO" resultType="org.srm.source.rfx.api.dto.RfxHeaderDTO">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        select
        <include refid="Base_Column_List"/>,
        <include refid="Template_Column_List"/>,
        <include refid="Prequal_Column_List"/>,
        ssrh.quotation_round_number,
        ssrh.round_quotation_end_date,
        ssrh.round_header_status,
        ssrh.round_quotation_rule,
        ssrh.starting_reason,
        sst.tax_included_flag as template_tax_included_flag,
        sst.tax_id as template_tax_id,
        sst.expert_source,
        sst.freight_included_flag as template_freight_included_flag,
        spls.section_code,
        spls.section_name,
        spls.section_num
        from
        ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id

        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and sph.prequal_category = 'RFX'

        left join ssrc_round_header ssrh on ssrh.tenant_id = h.tenant_id and ssrh.source_header_id = h.rfx_header_id and ssrh.source_from = 'RFX'
        left join ssrc_project_line_section spls on spls.source_header_id = h.rfx_header_id and spls.tenant_id = h.tenant_id and spls.source_from = 'RFX'
        <where>
             h.tenant_id = #{tenantId}
            <choose>
                <when test="rfxHeaderIdList != null and rfxHeaderIdList.size()>0">
                    and h.rfx_header_id in
                    <foreach collection="rfxHeaderIdList" open="(" close=")" separator="," item="rfxHeaderId">
                        #{rfxHeaderId}
                    </foreach>
                </when>
                <otherwise>
                    and h.rfx_header_id = -1
                </otherwise>
            </choose>
        </where>
    </select>
    <select id="supplierSectionBatchListParticipateQuery" resultType="org.srm.source.share.domain.entity.ProjectLineSection">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        SELECT
        *
        FROM
        (
        SELECT
        rh.rfx_status,
        rh.quotation_type,
        rh.latest_quotation_end_date,
        rh.round_number AS source_round_number,
        rh.object_version_number AS source_object_version_number,
        srls.supplier_company_id,
        srls.feedback_status,
        ssp.source_project_name,
        (case when spls.source_header_id is null then rh.rfx_header_id else spls.source_header_id end) source_header_id,
        (case when spls.source_header_num is null then rh.rfx_num else spls.source_header_num end) source_header_num,
        spls.section_num,
        spls.section_code,
        spls.section_name,
        spls.source_project_id,
        spls.project_line_section_id,
        -1 AS redact_flag
        FROM
        ssrc_rfx_header srh
        JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id
        JOIN ssrc_project_line_section spls ON spls.source_project_id = ssp.source_project_id
        JOIN ssrc_rfx_header rh ON rh.project_line_section_id = spls.project_line_section_id
        JOIN ssrc_rfx_line_supplier srls ON rh.rfx_header_id = srls.rfx_header_id
        AND rh.tenant_id = srls.tenant_id
        WHERE
        srh.tenant_id = #{tenantId}
        AND srh.rfx_header_id = #{rfxHeaderId}
        AND srls.feedback_status = 'NEW'
        AND ssp.subject_matter_rule = 'PACK'
        AND rh.source_method = 'INVITE'
        AND srls.supplier_company_id = #{supplierCompanyId}
        AND EXISTS ( SELECT sa.rfx_line_supplier_id FROM ssrc_rfx_item_sup_assign sa WHERE sa.invite_flag = 1 AND sa.rfx_header_id = rh.rfx_header_id AND sa.rfx_line_supplier_id = srls.rfx_line_supplier_id )
        UNION ALL
        SELECT
        rh.rfx_status,
        rh.quotation_type,
        rh.latest_quotation_end_date,
        rh.round_number AS source_round_number,
        rh.object_version_number AS source_object_version_number,
        hc.company_id as supplier_company_id,
        srls.feedback_status,
        ssp.source_project_name,
        (case when spls.source_header_id is null then rh.rfx_header_id else spls.source_header_id end) source_header_id,
        (case when spls.source_header_num is null then rh.rfx_num else spls.source_header_num end) source_header_num,
        spls.section_num,
        spls.section_code,
        spls.section_name,
        spls.source_project_id,
        spls.project_line_section_id,
        -1 AS redact_flag
        FROM
        ssrc_rfx_header srh
        JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id
        JOIN ssrc_project_line_section spls ON spls.source_project_id = ssp.source_project_id
        JOIN ssrc_rfx_header rh ON rh.project_line_section_id = spls.project_line_section_id
        JOIN spfm_partner sp ON sp.tenant_id = rh.tenant_id AND sp.company_id = rh.company_id AND sp.partner_tenant_id = #{supplierTenantId} AND sp.enabled_flag = '1'
        JOIN hpfm_company hc ON hc.tenant_id = sp.partner_tenant_id AND hc.company_id = sp.partner_company_id
        LEFT JOIN ssrc_rfx_line_supplier srls ON rh.rfx_header_id = srls.rfx_header_id AND rh.tenant_id = srls.tenant_id AND hc.company_id = srls.supplier_company_id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON rh.rfx_header_id = srqh.rfx_header_id
        AND srls.supplier_company_id = srqh.supplier_company_id
        AND srqh.round_number = rh.round_number
        LEFT JOIN ssrc_round_header ssrh ON ssrh.tenant_id = rh.tenant_id
        AND ssrh.source_header_id = rh.rfx_header_id
        AND ssrh.source_from = 'RFX'
        WHERE
        srh.tenant_id = #{tenantId}
        AND srh.rfx_header_id = #{rfxHeaderId}
        AND ( srls.feedback_status NOT IN ('ABANDONED','PARTICIPATED') OR srls.feedback_status IS NULL )
        AND ssp.subject_matter_rule = 'PACK'
        AND rh.source_method = 'OPEN'
        AND hc.company_id = #{supplierCompanyId}
        AND ( srqh.quotation_header_id IS NOT NULL OR ssrh.round_header_status NOT IN ( 'ROUND_CHECKING', 'ROUND_SCORING' ) OR ssrh.round_header_status IS NULL )
        UNION ALL
        SELECT
        rh.rfx_status,
        rh.quotation_type,
        rh.latest_quotation_end_date,
        rh.round_number AS source_round_number,
        rh.object_version_number AS source_object_version_number,
        hc.company_id as supplier_company_id,
        srls.feedback_status,
        ssp.source_project_name,
        (case when spls.source_header_id is null then rh.rfx_header_id else spls.source_header_id end) source_header_id,
        (case when spls.source_header_num is null then rh.rfx_num else spls.source_header_num end) source_header_num,
        spls.section_num,
        spls.section_code,
        spls.section_name,
        spls.source_project_id,
        spls.project_line_section_id,
        -1 AS redact_flag
        FROM
        ssrc_rfx_header srh
        JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id
        JOIN ssrc_project_line_section spls ON spls.source_project_id = ssp.source_project_id
        JOIN ssrc_rfx_header rh ON rh.project_line_section_id = spls.project_line_section_id
        JOIN iam_user iu ON rh.released_by = iu.id
        JOIN hiam_user_authority hua on hua.user_id = #{userId} and hua.authority_type_code = 'COMPANY'
        left JOIN hiam_user_authority_line hual on hual.authority_id = hua.authority_id
        JOIN hpfm_company hc ON (hc.tenant_id = hual.tenant_id AND hc.company_id = hual.data_id) or (hua.include_all_flag = 1 and hc.tenant_id = hua.tenant_id )
        LEFT JOIN ssrc_rfx_line_supplier srls ON rh.rfx_header_id = srls.rfx_header_id
        AND rh.tenant_id = srls.tenant_id
        AND hc.company_id = srls.supplier_company_id
        LEFT JOIN ssrc_rfx_quotation_header srqh ON rh.rfx_header_id = srqh.rfx_header_id
        AND srls.supplier_company_id = srqh.supplier_company_id
        AND srqh.round_number = rh.round_number
        LEFT JOIN ssrc_round_header ssrh ON ssrh.tenant_id = rh.tenant_id
        AND ssrh.source_header_id = rh.rfx_header_id
        AND ssrh.source_from = 'RFX'
        WHERE
        srh.rfx_header_id = #{rfxHeaderId}
        <if test="tenantId == supplierTenantId">
            AND srh.tenant_id != #{tenantId}
        </if>
        <if test="tenantId != supplierTenantId">
            AND srh.tenant_id = #{tenantId}
        </if>
        AND ssp.subject_matter_rule = 'PACK'
        AND rh.source_method = 'ALL_OPEN'
        AND ( srls.feedback_status NOT IN ('ABANDONED','PARTICIPATED') OR srls.feedback_status IS NULL )
        AND hc.company_id = #{supplierCompanyId}
        AND ( srqh.quotation_header_id IS NOT NULL OR ssrh.round_header_status NOT IN ( 'ROUND_CHECKING', 'ROUND_SCORING' ) OR ssrh.round_header_status IS NULL )
        ) union_all
        WHERE
        union_all.rfx_status NOT IN ( 'NEW', 'RELEASE_APPROVING', 'RELEASE_REJECTED', 'ROUNDED', 'FINISHED', 'CLOSED', 'CANCELED' )
        AND union_all.quotation_type != 'OFFLINE'
        AND (
        union_all.latest_quotation_end_date &gt; #{now}
        OR union_all.latest_quotation_end_date IS NULL
        OR ( union_all.latest_quotation_end_date &lt; #{now} AND union_all.quotation_type != 'OFFLINE' AND union_all.feedback_status IS NOT NULL AND union_all.feedback_status != 'NEW' ))
    </select>
    <select id="supplierSectionBatchQuotationListQuery" resultType="org.srm.source.share.domain.entity.ProjectLineSection">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        SELECT
            rh.rfx_status,
            rh.quotation_type,
            rh.latest_quotation_end_date,
            rh.round_number AS source_round_number,
            rh.object_version_number AS source_object_version_number,
            srqhh.supplier_company_id,
            srls.feedback_status,
            ssp.source_project_name,
            (case when spls.source_header_id is null then rh.rfx_header_id else spls.source_header_id end) source_header_id,
            (case when spls.source_header_num is null then rh.rfx_num else spls.source_header_num end) source_header_num,
            rh.round_number AS source_round_number,
            rh.template_id AS source_template_id,
            spls.section_num,
            spls.section_code,
            spls.section_name,
            spls.source_project_id,
            spls.project_line_section_id,
            spls.tenant_id,
            srqh.quotation_header_id,
            srqh.quotation_redact_flag AS redact_flag,
            (SELECT
                SUM( CASE WHEN ( srql.current_quotation_price IS NOT NULL AND srql.current_quotation_quantity IS NOT NULL ) THEN srql.current_quotation_price * srql.current_quotation_quantity ELSE 0 END )
            FROM
                ssrc_rfx_quotation_line srql
            WHERE
                srql.quotation_header_id = srqh.quotation_header_id
                AND srql.round_number = srqh.round_number
            ) quotation_total_amount,
            srqh.currency_code AS quotation_currency_code
        FROM
            ssrc_rfx_quotation_header srqhh
            JOIN ssrc_rfx_header srh ON srh.rfx_header_id = srqhh.rfx_header_id AND srqhh.round_number = srh.round_number
            JOIN ssrc_source_project ssp ON ssp.source_project_id = srh.source_project_id
            JOIN ssrc_project_line_section spls ON spls.source_project_id = ssp.source_project_id
            JOIN ssrc_rfx_header rh ON rh.project_line_section_id = spls.project_line_section_id
            JOIN ssrc_rfx_line_supplier srls ON rh.rfx_header_id = srls.rfx_header_id AND rh.tenant_id = srls.tenant_id AND srls.supplier_company_id = srqhh.supplier_company_id
            JOIN ssrc_rfx_quotation_header srqh ON rh.rfx_header_id = srqh.rfx_header_id
            AND srls.supplier_company_id = srqh.supplier_company_id
            AND srqh.round_number = rh.round_number
            LEFT JOIN ssrc_round_header ssrh ON ssrh.tenant_id = rh.tenant_id
            AND ssrh.source_header_id = rh.rfx_header_id
            AND ssrh.source_from = 'RFX'
        WHERE
            srqhh.quotation_header_id = #{quotationHeaderId}
          AND srls.feedback_status = 'PARTICIPATED'
          AND ssp.subject_matter_rule = 'PACK'
          AND srqh.quotation_status != 'FINISHED'
          AND rh.rfx_status NOT IN ( 'NEW', 'RELEASE_APPROVING', 'RELEASE_REJECTED', 'ROUNDED', 'FINISHED', 'CLOSED', 'CANCELED' )
          AND rh.quotation_type != 'OFFLINE'
          AND (rh.quotation_start_date IS NOT NULL AND rh.quotation_start_date &lt; #{now})
          AND ((rh.latest_quotation_end_date &gt; #{now} OR rh.latest_quotation_end_date IS NULL)
              OR ((rh.bargain_status = 'BARGAINING_OFFLINE' OR rh.bargain_status = 'BARGAINING_ONLINE') AND rh.bargain_end_date &gt;#{now}))
    </select>
    <select id="selectSameStatusRfxHeader" resultType="org.srm.source.rfx.domain.entity.RfxHeader">
        <bind name="now" value="@org.apache.commons.lang3.time.DateUtils@truncate(new java.util.Date(), @java.util.Calendar@SECOND)"/>
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        select
        *
        from (
        select
        h.rfx_header_id,
        h.estimated_start_time,
        h.tenant_id,
        <choose>
            <!--> 议价标段列表处理 <-->
            <when test="status != null and status == 'BARGAIN'">
                h.bargain_redact_flag AS redact_flag,
            </when>
            <when test="status != null and status == 'BARGAIN_OPEN'">
                h.bargain_redact_flag AS redact_flag,
            </when>
            <otherwise>
                h.redact_flag,
            </otherwise>
        </choose>
        h.bid_bond,
        h.bid_file_expense,
        h.rfx_num as source_header_num,
        h.rfx_status as db_status,
        (CASE
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_in_prequal"/> THEN 'IN_PREQUAL'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_pending_prequal"/> THEN 'PENDING_PREQUAL'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_not_start"/> THEN 'NOT_START'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_in_quotation"/> THEN 'IN_QUOTATION'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_lack_quoted"/> THEN 'LACK_QUOTED'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_open_bid_pending"/> THEN 'OPEN_BID_PENDING'
        WHEN h.rfx_status in ('IN_QUOTATION', 'SCORING','CHECK_PENDING') AND <include refid="status_bargain"/> THEN 'BARGAINING'
        WHEN h.rfx_status in ('IN_QUOTATION', 'SCORING','CHECK_PENDING')  AND <include refid="status_round_quotation"/> THEN 'ROUND_QUOTATION'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_scoring"/> THEN 'SCORING'
        WHEN h.rfx_status in ('SCORING','RFX_EVALUATION_PENDING','PRE_EVALUATION_PENDING','INITIAL_REVIEW_SCORING','RFX_INITIAL_REVIEW_PENDING') THEN 'SCORING'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_pretrial_pending"/> THEN 'PRETRIAL_PENDING'
        WHEN h.rfx_status = 'IN_QUOTATION' AND <include refid="status_check_pending"/> THEN 'CHECK_PENDING'
        ELSE h.rfx_status
        END) as rfx_status,
        h.rfx_title,
        h.template_id,
        h.source_category,
        h.source_method,
        h.pur_organization_id,
        h.company_id,
        h.company_name,
        h.auction_direction,
        h.budget_amount,
        h.tax_included_flag,
        h.tax_id,
        h.tax_rate,
        h.currency_code,
        h.exchange_rate_id,
        h.exchange_rate_type,
        h.exchange_rate_date,
        h.exchange_rate_period,
        h.exchange_rate,
        h.rfx_remark,
        h.internal_remark,
        h.quotation_start_date,
        h.sealed_quotation_flag,
        h.open_rule,
        h.auction_ranking,
        h.source_type,
        h.price_category,
        h.hand_down_date,
        h.payment_type_id,
        h.payment_term_id,
        h.round_number,
        h.version_number,
        h.quotation_order_type,
        h.quotation_running_duration,
        h.quotation_interval,
        h.auction_rule,
        h.auto_defer_flag,
        h.auto_defer_duration,
        h.released_date,
        h.released_by,
        h.terminated_date,
        h.terminated_by,
        h.terminated_remark,
        h.time_adjusted_date,
        h.time_adjusted_by,
        h.time_adjusted_remark,
        h.closed_flag,
        h.source_from,
        h.pretrail_remark,
        h.total_cost,
        h.cost_remark,
        h.tech_attachment_uuid,
        h.business_attachment_uuid,
        h.check_attachment_uuid,
        h.back_pretrial_remark,
        h.object_version_number,
        h.creation_date,
        h.created_by,
        h.last_updated_by,
        h.quotation_type,
        h.last_update_date,
        h.quotation_scope,
        h.start_flag,
        h.start_quotation_running_duration,
        h.unit_id,
        h.created_unit_id,
        h.current_sequence_num,
        CASE WHEN h.latest_quotation_end_date IS NULL THEN h.quotation_end_date ELSE h.latest_quotation_end_date END as
        quotation_end_date,
        h.latest_quotation_end_date,
        h.bargain_status,
        h.bargain_end_date,
        h.bargain_attachment_uuid,
        h.purchaser_id,
        h.multi_currency_flag,
        h.pretrial_uuid,
        h.pretrial_user_id,
        h.check_remark,
        h.finishing_rate,
        h.central_purchase_flag,
        h.min_quoted_supplier,
        h.checked_by,
        h.matter_require_flag,
        h.matter_detail,
        h.payment_term_flag,
        h.payment_clause,
        h.rank_rule,
        h.pur_name,
        h.pur_email,
        h.pur_phone,
        h.check_finished_date,
        h.source_project_id,
        h.project_line_section_id,
        sst.template_name,
        sst.opener_flag,
        sst.quotation_end_date_flag,
        sst.source_announcement_flag,
        sst.expert_score_type,
        sst.qualification_type,
        sst.max_vendor_quantity,
        sst.min_vendor_number,
        sst.quantity_change_flag,
        sst.tax_change_flag,
        sst.pretrial_flag,
        sst.match_restrict_flag,
        sst.valid_date_input_type,
        sst.source_stage,
        sst.bargain_rule,
        sst.bargain_offline_flag,
        sst.auto_defer_type,
        sst.auto_defer_period,
        sst.max_defer_count,
        sst.diy_ladder_quotation_flag,
        sst.open_bid_order,
        sst.initial_review,
        sst.subject_matter_rule,
        sst.bid_rule_type,
        sst.budget_control_rule,
        sst.freight_updatable_flag,
        sst.continuous_quotation_flag,
        sph.prequal_header_id,
        sph.prequal_end_date,
        sph.prequal_location,
        sph.qualified_limit,
        sph.review_method,
        sph.file_free_flag,
        sph.prequal_file_expense,
        sph.prequal_remark,
        sph.enable_score_flag,
        sph.prequal_attachment_uuid,
        sph.prequal_status,
        sph.approved_date,
        sph.approved_remark,
        sph.manufacturer_type,
        sph.object_version_number as prequal_object_version_number,
        sph.prequal_user_id,
        srh.round_header_status,
        srh.round_quotation_end_date,
        srh.quotation_round_number,
        sst.round_quotation_rule,
        sst.fast_bidding,
        <if test="status != null and status == 'OPEN_BID_PENDING'">
               srm.password_flag,
        </if>
        srh.round_header_id
        from ssrc_rfx_header h
        join ssrc_source_template sst on sst.template_id = h.template_id
        left join ssrc_prequal_header sph on sph.rfx_header_id = h.rfx_header_id and sph.tenant_id = h.tenant_id and
        sph.prequal_category = 'RFX'
        left join ssrc_round_header srh on srh.source_header_id = h.rfx_header_id and srh.source_from = 'RFX' and h.
        round_number = srh.round_number
        <if test="status != null and status == 'OPEN_BID_PENDING'">
            left join ssrc_rfx_member srm on srm.rfx_header_id = h.rfx_header_id
        </if>
        where h.rfx_header_id in
        <foreach collection="rfxHeaderIds" open="(" separator="," close=")" item="rfxHeaderId">
            #{rfxHeaderId}
        </foreach>
        <if test="status != null and status == 'CHECK_PENDING'">
            AND exists (select 1 from ssrc_rfx_member where rfx_header_id = h.rfx_header_id and rfx_role = 'CHECKED_BY' and user_id = #{userDetails.userId})
        </if>
        <if test="status != null and status == 'OPEN_BID_PENDING'">
            AND srm.rfx_role = 'OPENED_BY' and srm.user_id = #{userDetails.userId} and srm.opened_flag = 0
        </if>
        ) temp where
        <choose>
            <!--> 议价标段列表处理 <-->
            <when test="status != null and status == 'BARGAIN'">
                ((temp.rfx_status = 'BARGAINING')
                OR (temp.rfx_status = 'CHECK_PENDING' AND temp.bargain_rule in ('CHECK','ALL'))
                OR (temp.rfx_status = 'SCORING' AND temp.bargain_rule in ('SCORE','ALL')))
                AND temp.bargain_status IN ('BARGAIN_ONLINE','BARGAINING_ONLINE','BARGAIN_OFFLINE','BARGAINING_OFFLINE')
            </when>
            <when test="status != null and status == 'BARGAIN_OPEN'">
                ((temp.rfx_status = 'BARGAINING')
                OR (temp.rfx_status = 'CHECK_PENDING' AND temp.bargain_rule in ('CHECK','ALL'))
                OR (temp.rfx_status = 'SCORING' AND temp.bargain_rule in ('SCORE','ALL')))
                AND temp.bargain_status IN ('NEW','INITIATE','BARGAIN_ONLINE','BARGAIN_OFFLINE')
            </when>
            <otherwise>
                temp.rfx_status = #{status}
            </otherwise>
        </choose>
    </select>

</mapper>
